{
  "contractName": "HeirloomStorage",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BoughtFromSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint96",
          "name": "Commission",
          "type": "uint96"
        }
      ],
      "name": "CommissionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newEscrow",
          "type": "address"
        }
      ],
      "name": "EscrowUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "licenseId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "listedAmount",
          "type": "uint256"
        }
      ],
      "name": "LicenseListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "licenseId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "LicenseSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "licenseId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Types.ListedStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "ListedLicenseClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "listingFee",
          "type": "uint256"
        }
      ],
      "name": "ListingFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        }
      ],
      "name": "SaleActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        }
      ],
      "name": "SaleClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "representative",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "SaleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newToken",
          "type": "address"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTreasury",
          "type": "address"
        }
      ],
      "name": "TreasuryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "UserVerified",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COMMISSION_BP",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LISTING_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BoughtFromSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint96\",\"name\":\"Commission\",\"type\":\"uint96\"}],\"name\":\"CommissionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"EscrowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"licenseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listedAmount\",\"type\":\"uint256\"}],\"name\":\"LicenseListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"licenseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"LicenseSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"licenseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Types.ListedStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ListedLicenseClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingFee\",\"type\":\"uint256\"}],\"name\":\"ListingFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"SaleActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"SaleClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"representative\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserVerified\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMMISSION_BP\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LISTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"BoughtFromSale(uint256,uint256,address,uint256)\":{\"notice\":\"emitted after a license is bought from a sale\"},\"CommissionUpdated(uint96)\":{\"notice\":\"emitted after the commission basis points is updated \"},\"EscrowUpdated(address)\":{\"notice\":\"emitted after the treasury is updated \"},\"LicenseListed(uint256,uint256,address,uint256,uint256)\":{\"notice\":\"emitted after a license is listed by a user\"},\"LicenseSold(uint256,uint256,address,address,uint256,uint256)\":{\"notice\":\"emitted after a license is listed by a user\"},\"ListedLicenseClosed(uint256,uint256,address,uint8)\":{\"notice\":\"emitted after a listed license is closed\"},\"ListingFeeUpdated(uint256)\":{\"notice\":\"emitted after the listing fee is updated \"},\"SaleActivated(uint256)\":{\"notice\":\"emitted after a (future) sale is activated\"},\"SaleClosed(uint256)\":{\"notice\":\"emitted after a close sale\"},\"SaleCreated(address,uint256,uint256)\":{\"notice\":\"emitted after every sale created\"},\"TokenUpdated(address)\":{\"notice\":\"emitted after the treasury is updated \"},\"TreasuryUpdated(address)\":{\"notice\":\"emitted after the treasury is updated \"},\"UserVerified(address)\":{\"notice\":\"emitted after the treasury is updated \"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HeirloomStorage.sol\":\"HeirloomStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"project:/contracts/HeirloomStorage.sol\":{\"keccak256\":\"0xd25c9dbb0ea15648245764c69d917ec5aeee40f2336acbce86d41fc72aab0753\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ece819544305637ffc5d2fd327553dcf8154d74ee291438c875936e01666203c\",\"dweb:/ipfs/QmRY6TaNs88NEiJZx4EJiuimHAPAQnhTdsqsrpgXN6VMhK\"]},\"project:/contracts/Types.sol\":{\"keccak256\":\"0x44ea0843a8176a595515cdc57e437dbcd60803638a6b94e2df5483e1161accbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d283db5f01df9d42eabcae03a9ea10403cd6b64a24b097ac5768e9f9e45f2fbe\",\"dweb:/ipfs/QmWtCsJP78bG5xSK9kc6BCW1TgNQQG2LvSo4TWm2LaCm7H\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"./Types.sol\"; \r\n\r\nabstract contract HeirloomStorage is Types {\r\n    \r\n    uint256 public LISTING_FEE;\r\n    uint96 public COMMISSION_BP;\r\n    \r\n    address internal _hiloToken;\r\n    address internal _escrowSales;\r\n    address internal _escrowListed;\r\n    address internal _treasury;\r\n\r\n    Counters.Counter internal _saleIds;\r\n    Counters.Counter internal _closedSales;\r\n    Counters.Counter internal _licenseItemIds;\r\n    Counters.Counter internal _closedLicenseItems;\r\n    Counters.Counter internal _futureSales;\r\n\r\n    mapping(address => bool) internal _isVerified;\r\n    mapping(uint256 => SaleItem) internal _idToSaleItem;\r\n    mapping(uint256 => LicenseItem) internal _idToLicenseItem;\r\n}",
  "sourcePath": "C:\\Users\\DELL\\Documents\\heirloomdao\\contracts\\contracts\\HeirloomStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/HeirloomStorage.sol",
    "exportedSymbols": {
      "Address": [
        5166
      ],
      "Counters": [
        5347
      ],
      "HeirloomStorage": [
        6502
      ],
      "IERC20": [
        4250
      ],
      "SafeERC20": [
        4871
      ],
      "Types": [
        6687
      ]
    },
    "id": 6503,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6454,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:39"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 6455,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6503,
        "sourceUnit": 5167,
        "src": "60:51:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 6456,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6503,
        "sourceUnit": 4872,
        "src": "113:65:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 6457,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6503,
        "sourceUnit": 5348,
        "src": "180:52:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Types.sol",
        "file": "./Types.sol",
        "id": 6458,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6503,
        "sourceUnit": 6688,
        "src": "234:21:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6459,
              "name": "Types",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6687,
              "src": "297:5:39"
            },
            "id": 6460,
            "nodeType": "InheritanceSpecifier",
            "src": "297:5:39"
          }
        ],
        "canonicalName": "HeirloomStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6502,
        "linearizedBaseContracts": [
          6502,
          6687
        ],
        "name": "HeirloomStorage",
        "nameLocation": "278:15:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2b86ae38",
            "id": 6462,
            "mutability": "mutable",
            "name": "LISTING_FEE",
            "nameLocation": "331:11:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "316:26:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6461,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "316:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b4f35148",
            "id": 6464,
            "mutability": "mutable",
            "name": "COMMISSION_BP",
            "nameLocation": "363:13:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "349:27:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint96",
              "typeString": "uint96"
            },
            "typeName": {
              "id": 6463,
              "name": "uint96",
              "nodeType": "ElementaryTypeName",
              "src": "349:6:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6466,
            "mutability": "mutable",
            "name": "_hiloToken",
            "nameLocation": "406:10:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "389:27:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6465,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:39",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6468,
            "mutability": "mutable",
            "name": "_escrowSales",
            "nameLocation": "440:12:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "423:29:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6467,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "423:7:39",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6470,
            "mutability": "mutable",
            "name": "_escrowListed",
            "nameLocation": "476:13:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "459:30:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6469,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "459:7:39",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6472,
            "mutability": "mutable",
            "name": "_treasury",
            "nameLocation": "513:9:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "496:26:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6471,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "496:7:39",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6475,
            "mutability": "mutable",
            "name": "_saleIds",
            "nameLocation": "557:8:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "531:34:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$5279_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 6474,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6473,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5279,
                "src": "531:16:39"
              },
              "referencedDeclaration": 5279,
              "src": "531:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$5279_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6478,
            "mutability": "mutable",
            "name": "_closedSales",
            "nameLocation": "598:12:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "572:38:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$5279_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 6477,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6476,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5279,
                "src": "572:16:39"
              },
              "referencedDeclaration": 5279,
              "src": "572:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$5279_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6481,
            "mutability": "mutable",
            "name": "_licenseItemIds",
            "nameLocation": "643:15:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "617:41:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$5279_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 6480,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6479,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5279,
                "src": "617:16:39"
              },
              "referencedDeclaration": 5279,
              "src": "617:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$5279_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6484,
            "mutability": "mutable",
            "name": "_closedLicenseItems",
            "nameLocation": "691:19:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "665:45:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$5279_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 6483,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6482,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5279,
                "src": "665:16:39"
              },
              "referencedDeclaration": 5279,
              "src": "665:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$5279_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6487,
            "mutability": "mutable",
            "name": "_futureSales",
            "nameLocation": "743:12:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "717:38:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$5279_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 6486,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6485,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5279,
                "src": "717:16:39"
              },
              "referencedDeclaration": 5279,
              "src": "717:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$5279_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6491,
            "mutability": "mutable",
            "name": "_isVerified",
            "nameLocation": "798:11:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "764:45:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 6490,
              "keyType": {
                "id": 6488,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "772:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "764:24:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 6489,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "783:4:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6496,
            "mutability": "mutable",
            "name": "_idToSaleItem",
            "nameLocation": "854:13:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "816:51:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
              "typeString": "mapping(uint256 => struct Types.SaleItem)"
            },
            "typeName": {
              "id": 6495,
              "keyType": {
                "id": 6492,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "824:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "816:28:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                "typeString": "mapping(uint256 => struct Types.SaleItem)"
              },
              "valueType": {
                "id": 6494,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6493,
                  "name": "SaleItem",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6568,
                  "src": "835:8:39"
                },
                "referencedDeclaration": 6568,
                "src": "835:8:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SaleItem_$6568_storage_ptr",
                  "typeString": "struct Types.SaleItem"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6501,
            "mutability": "mutable",
            "name": "_idToLicenseItem",
            "nameLocation": "915:16:39",
            "nodeType": "VariableDeclaration",
            "scope": 6502,
            "src": "874:57:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LicenseItem_$6586_storage_$",
              "typeString": "mapping(uint256 => struct Types.LicenseItem)"
            },
            "typeName": {
              "id": 6500,
              "keyType": {
                "id": 6497,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "882:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "874:31:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LicenseItem_$6586_storage_$",
                "typeString": "mapping(uint256 => struct Types.LicenseItem)"
              },
              "valueType": {
                "id": 6499,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6498,
                  "name": "LicenseItem",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6586,
                  "src": "893:11:39"
                },
                "referencedDeclaration": 6586,
                "src": "893:11:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_LicenseItem_$6586_storage_ptr",
                  "typeString": "struct Types.LicenseItem"
                }
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 6503,
        "src": "260:675:39",
        "usedErrors": []
      }
    ],
    "src": "33:902:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-07T10:45:15.666Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "BoughtFromSale(uint256,uint256,address,uint256)": {
        "notice": "emitted after a license is bought from a sale"
      },
      "CommissionUpdated(uint96)": {
        "notice": "emitted after the commission basis points is updated "
      },
      "EscrowUpdated(address)": {
        "notice": "emitted after the treasury is updated "
      },
      "LicenseListed(uint256,uint256,address,uint256,uint256)": {
        "notice": "emitted after a license is listed by a user"
      },
      "LicenseSold(uint256,uint256,address,address,uint256,uint256)": {
        "notice": "emitted after a license is listed by a user"
      },
      "ListedLicenseClosed(uint256,uint256,address,uint8)": {
        "notice": "emitted after a listed license is closed"
      },
      "ListingFeeUpdated(uint256)": {
        "notice": "emitted after the listing fee is updated "
      },
      "SaleActivated(uint256)": {
        "notice": "emitted after a (future) sale is activated"
      },
      "SaleClosed(uint256)": {
        "notice": "emitted after a close sale"
      },
      "SaleCreated(address,uint256,uint256)": {
        "notice": "emitted after every sale created"
      },
      "TokenUpdated(address)": {
        "notice": "emitted after the treasury is updated "
      },
      "TreasuryUpdated(address)": {
        "notice": "emitted after the treasury is updated "
      },
      "UserVerified(address)": {
        "notice": "emitted after the treasury is updated "
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}