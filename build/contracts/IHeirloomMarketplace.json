{
  "contractName": "IHeirloomMarketplace",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BoughtFromSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint96",
          "name": "Commission",
          "type": "uint96"
        }
      ],
      "name": "CommissionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newEscrow",
          "type": "address"
        }
      ],
      "name": "EscrowUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "licenseId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "listedAmount",
          "type": "uint256"
        }
      ],
      "name": "LicenseListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "licenseId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "LicenseSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "licenseId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Types.ListedStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "ListedLicenseClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "listingFee",
          "type": "uint256"
        }
      ],
      "name": "ListingFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        }
      ],
      "name": "SaleActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        }
      ],
      "name": "SaleClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "representative",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "SaleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newToken",
          "type": "address"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTreasury",
          "type": "address"
        }
      ],
      "name": "TreasuryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "UserVerified",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COMMISSION_BP",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LISTING_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "newBP",
          "type": "uint96"
        }
      ],
      "name": "setCommissionRBP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newListingFee",
          "type": "uint256"
        }
      ],
      "name": "setListingFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTreasury",
          "type": "address"
        }
      ],
      "name": "updateTreasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newEscrow",
          "type": "address"
        }
      ],
      "name": "updateEscrowSales",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newEscrow",
          "type": "address"
        }
      ],
      "name": "updateEscrowListed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "verifyUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isUserVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "licenseProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "refferer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint96",
          "name": "rbp",
          "type": "uint96"
        }
      ],
      "name": "createSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        }
      ],
      "name": "activateFutureSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "listLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        }
      ],
      "name": "forceCloseSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        }
      ],
      "name": "closeSaleOnDeadline",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "participate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fetchListedLicenses",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "licenseId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "listedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sold",
              "type": "uint256"
            },
            {
              "internalType": "enum Types.ListedStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct Types.LicenseItem[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "licenseId",
          "type": "uint256"
        }
      ],
      "name": "fetchLicense",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "licenseId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "listedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sold",
              "type": "uint256"
            },
            {
              "internalType": "enum Types.ListedStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct Types.LicenseItem",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fetchActiveSales",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "saleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "licenseProvider",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "representative",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "refferer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "soldLicenses",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isFuture",
              "type": "bool"
            }
          ],
          "internalType": "struct Types.SaleItem[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        }
      ],
      "name": "fetchSale",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "saleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "licenseProvider",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "representative",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "refferer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "soldLicenses",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isFuture",
              "type": "bool"
            }
          ],
          "internalType": "struct Types.SaleItem",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "licenseId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "purchaseLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "listingFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "hilo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "escrowSales",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "escrowListed",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "commissionBp",
          "type": "uint96"
        }
      ],
      "name": "__HeirloomMarketplace_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BoughtFromSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint96\",\"name\":\"Commission\",\"type\":\"uint96\"}],\"name\":\"CommissionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"EscrowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"licenseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listedAmount\",\"type\":\"uint256\"}],\"name\":\"LicenseListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"licenseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"LicenseSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"licenseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Types.ListedStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ListedLicenseClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingFee\",\"type\":\"uint256\"}],\"name\":\"ListingFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"SaleActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"SaleClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"representative\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserVerified\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMMISSION_BP\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LISTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listingFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hilo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escrowSales\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escrowListed\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"commissionBp\",\"type\":\"uint96\"}],\"name\":\"__HeirloomMarketplace_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"activateFutureSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"closeSaleOnDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"licenseProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refferer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"rbp\",\"type\":\"uint96\"}],\"name\":\"createSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchActiveSales\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"licenseProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"representative\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refferer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"soldLicenses\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isFuture\",\"type\":\"bool\"}],\"internalType\":\"struct Types.SaleItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseId\",\"type\":\"uint256\"}],\"name\":\"fetchLicense\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"licenseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"enum Types.ListedStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct Types.LicenseItem\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchListedLicenses\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"licenseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"enum Types.ListedStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct Types.LicenseItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"fetchSale\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"licenseProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"representative\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"refferer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"soldLicenses\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isFuture\",\"type\":\"bool\"}],\"internalType\":\"struct Types.SaleItem\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"name\":\"forceCloseSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"listLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"participate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"purchaseLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"newBP\",\"type\":\"uint96\"}],\"name\":\"setCommissionRBP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newListingFee\",\"type\":\"uint256\"}],\"name\":\"setListingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"updateEscrowListed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"updateEscrowSales\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"verifyUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"activateFutureSale(uint256)\":{\"params\":{\"saleId\":\"id of the sale to be activated\"}},\"closeSaleOnDeadline(uint256)\":{\"params\":{\"saleId\":\"id of the sale to be closed\"}},\"createSale(address,uint256,address,address,uint256,uint256,uint256,uint96)\":{\"params\":{\"end\":\"enddate of sale\",\"maxSupply\":\"token cap of license\",\"nftContract\":\"nft contract for minting license nft\",\"price\":\"of the item in the sale\",\"rbp\":\"royalty basis points, percentage of royalty to be collected by license creator\",\"refferer\":\"address of the refferer\",\"start\":\"startDate of the sale\"}},\"fetchLicense(uint256)\":{\"params\":{\"licenseId\":\"id of the listed license\"}},\"fetchSale(uint256)\":{\"params\":{\"saleId\":\"id of the sale to be retrieved\"}},\"forceCloseSale(uint256)\":{\"params\":{\"saleId\":\"id of the sale to be forced closed\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isUserVerified(address)\":{\"params\":{\"user\":\"checks wheter a user is verified\"}},\"listLicense(address,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"the amount of nfts to be put up for sale\",\"nftContract\":\"nft contract address of the license nft\",\"price\":\"to sell license for\",\"tokenId\":\"the tokenId of the Saas License nft\"}},\"participate(uint256,uint256)\":{\"details\":\"erc20 transfer needs to be pre-approved\",\"params\":{\"amount\":\"number of licenses to buy\",\"saleId\":\"id of the ongoing sale\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"purchaseLicense(uint256,uint256)\":{\"params\":{\"amount\":\"amount to purchase \",\"licenseId\":\"id of the license to sell\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setCommissionRBP(uint96)\":{\"params\":{\"newBP\":\"new commission basis points\"}},\"setListingFee(uint256)\":{\"params\":{\"newListingFee\":\"new listing fee\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateEscrowListed(address)\":{\"params\":{\"newEscrow\":\"address to which escrow is updated\"}},\"updateEscrowSales(address)\":{\"params\":{\"newEscrow\":\"address to which escrow is updated\"}},\"updateTreasury(address)\":{\"params\":{\"newTreasury\":\"address to which treasury is updated\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"verifyUser(address)\":{\"params\":{\"user\":\"verifies a user on request of verifier\"}}},\"title\":\"base contract for heirloomdao marketplace implementation\",\"version\":1},\"userdoc\":{\"events\":{\"BoughtFromSale(uint256,uint256,address,uint256)\":{\"notice\":\"emitted after a license is bought from a sale\"},\"CommissionUpdated(uint96)\":{\"notice\":\"emitted after the commission basis points is updated \"},\"EscrowUpdated(address)\":{\"notice\":\"emitted after the treasury is updated \"},\"LicenseListed(uint256,uint256,address,uint256,uint256)\":{\"notice\":\"emitted after a license is listed by a user\"},\"LicenseSold(uint256,uint256,address,address,uint256,uint256)\":{\"notice\":\"emitted after a license is listed by a user\"},\"ListedLicenseClosed(uint256,uint256,address,uint8)\":{\"notice\":\"emitted after a listed license is closed\"},\"ListingFeeUpdated(uint256)\":{\"notice\":\"emitted after the listing fee is updated \"},\"SaleActivated(uint256)\":{\"notice\":\"emitted after a (future) sale is activated\"},\"SaleClosed(uint256)\":{\"notice\":\"emitted after a close sale\"},\"SaleCreated(address,uint256,uint256)\":{\"notice\":\"emitted after every sale created\"},\"TokenUpdated(address)\":{\"notice\":\"emitted after the treasury is updated \"},\"TreasuryUpdated(address)\":{\"notice\":\"emitted after the treasury is updated \"},\"UserVerified(address)\":{\"notice\":\"emitted after the treasury is updated \"}},\"kind\":\"user\",\"methods\":{\"activateFutureSale(uint256)\":{\"notice\":\"activates a sale that starts of which its start date is < block timestamp\"},\"closeSaleOnDeadline(uint256)\":{\"notice\":\"closes a sale id only if deadline is passed \"},\"createSale(address,uint256,address,address,uint256,uint256,uint256,uint96)\":{\"notice\":\"creates a saleItem\"},\"fetchActiveSales()\":{\"notice\":\"fetches all of the active nft license sales on the platform\"},\"fetchLicense(uint256)\":{\"notice\":\"fetches a license with a given licenseid\"},\"fetchListedLicenses()\":{\"notice\":\"fetches all tokenIds listed for sale\"},\"fetchSale(uint256)\":{\"notice\":\"retrieves a sale\"},\"forceCloseSale(uint256)\":{\"notice\":\"allows creator of a sale to foricibly end a sale\"},\"isUserVerified(address)\":{\"notice\":\"verifies a user\"},\"listLicense(address,uint256,uint256,uint256)\":{\"notice\":\"gives the heirloom operator permission to sell an token amount on behalf of the user\"},\"participate(uint256,uint256)\":{\"notice\":\"allows a user to participate in a license sale\"},\"purchaseLicense(uint256,uint256)\":{\"notice\":\"transfers license item to send on tokenTransfer\"},\"setCommissionRBP(uint96)\":{\"notice\":\"sets new commission rbp\"},\"setListingFee(uint256)\":{\"notice\":\"sets the listing fee\"},\"updateEscrowListed(address)\":{\"notice\":\"sets a new escrow address\"},\"updateEscrowSales(address)\":{\"notice\":\"sets a new escrow address\"},\"updateTreasury(address)\":{\"notice\":\"sets a new treasury address\"},\"verifyUser(address)\":{\"notice\":\"verifies a user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IHeirloomMarketplace.sol\":\"IHeirloomMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x5addc7dca2366b164c9befa35da22e9081c44bf6c4c8dce4269be43516f8916e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94aa0da913b24beae8db8180c28b894981568c7ed558136401977f115f40bade\",\"dweb:/ipfs/QmYSMnuMzfs5zemQJ8EYkBd42sWxnEv5kAf4EEik91HryE\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b268304e03daf22c349abe3c318bc6a6badd6542d62311716ab401eec745f78\",\"dweb:/ipfs/QmNYy2sc2RoTjDhyT6HAibmeDGqfhDiDpsWRbHFHoGVHLr\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4a1a0ba12bf1a33f10d9fe226278cf59675c0b929d29e4da99658a079b27fb84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bda1319db846d6d6f92d8a57a9bdee8bde1dc39aa7546165791692c24dd6f30a\",\"dweb:/ipfs/Qma5oZ7DmbdAjd8mpiW7mx896PDtwsQtCQ2hj9Upf7b7JK\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x20ba3c551439998a53313a63959be77ab70f14338a39592c7a6eb36e8bc3d148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b4ad713900e1f3f43788b00742e0c1a885c254decf8fb8d854f4769401239cd\",\"dweb:/ipfs/QmatiW29TqVMi4dgfHM2Uppn4LqsSeJZtnVvT2rrYqyjR2\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe243a49f159c97fdd011edb7a8ed1b48175f0fa6b8592bb6dcccac7e22d8c37b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fcf3c76e66e7cbd95bc1d47eb41c2764670deea0e129a0bc8ed893f5ee20628\",\"dweb:/ipfs/QmUVYsGME7ikBfN638shb36WHbqecVAzxVMqSHT1eE5Qdk\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbaba7fe0fe556cc5ed291e03d271fd27d395250141ecfb57a4b30d528958ff9\",\"dweb:/ipfs/QmWT653X2DyZo8nqEcmFe3yTkrCJv3ptbZLhbgLU3y6abe\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/HeirloomStorage.sol\":{\"keccak256\":\"0xd25c9dbb0ea15648245764c69d917ec5aeee40f2336acbce86d41fc72aab0753\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ece819544305637ffc5d2fd327553dcf8154d74ee291438c875936e01666203c\",\"dweb:/ipfs/QmRY6TaNs88NEiJZx4EJiuimHAPAQnhTdsqsrpgXN6VMhK\"]},\"project:/contracts/Types.sol\":{\"keccak256\":\"0x44ea0843a8176a595515cdc57e437dbcd60803638a6b94e2df5483e1161accbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d283db5f01df9d42eabcae03a9ea10403cd6b64a24b097ac5768e9f9e45f2fbe\",\"dweb:/ipfs/QmWtCsJP78bG5xSK9kc6BCW1TgNQQG2LvSo4TWm2LaCm7H\"]},\"project:/contracts/erc1155/HeirloomLicenseNFT.sol\":{\"keccak256\":\"0x601409f0e1badbde72b31447948630d250e8f5c9d1d8573f4ba0f138861cfea9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99d4dddfe5673ca898d00fda4079a8c9833aeeafe59fc1d0370122839db42cda\",\"dweb:/ipfs/QmfVEnNqeHD7sNzDVcfK4mLz7xVS4Nb1u92m6K3bQWUtxV\"]},\"project:/contracts/interfaces/IHeirloomMarketplace.sol\":{\"keccak256\":\"0xebf96911f9bfd58e523f8e545cb5231c91d1ea21c7344c90a77c82dceff74fe7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://237ce5d103a75297a74ef2c8c025e7a6cf61a878a8d2b3c2a9873b05474f8a1f\",\"dweb:/ipfs/Qmci4TMMvnn4J4XhqMuG3nbGrkd65wB3BcAURQCUCJQv1j\"]},\"project:/contracts/interfaces/IHeirloomRoyaltiesV1.sol\":{\"keccak256\":\"0xe375675b29fceb68ee5599eeaa909807398985bbc2ceccf88ea7e5c65050d9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06425ef0ddc9d4962d15554d203467a840787b44490732bd74ab8cc0c3eae355\",\"dweb:/ipfs/QmdpNJ9LrMXXuqin1278aKGSNWV2jpZU6T8gUQQoyFpEny\"]},\"project:/contracts/libs/LibHeirloomRoyaltiesV1.sol\":{\"keccak256\":\"0x55ebceb93ee1cb0f1990148c9741cb577d34acec0078e3a3e43691bd70d4fd3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec8dbdf5b4602d81329fd3ce1c8f92609583029284b8d71ced132662ccc5da7f\",\"dweb:/ipfs/QmeyuWzHsqEH3XkXpY2r32f59mXBExAwx4RjRQcxms7YuT\"]},\"project:/contracts/libs/LibPart.sol\":{\"keccak256\":\"0x6cbeaaf90ab3fb9a12164404aa451523dd65eafb4dc67b3208725dd57d2a0f14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf2c06586cbed28fff0981f6474b8c9382c5ea81dcf43bd703e0f90c1b0e02b1\",\"dweb:/ipfs/QmVR8UEmGmDPb6jRKRff52Aj2CKFhH2u7uyhHfaMeHiL6K\"]},\"project:/contracts/royalties/AbstractHeirloomRoyaltiesV1.sol\":{\"keccak256\":\"0x53b1421a65e43efe9ece6e5704f8c952a142b4c0f16cc2ee0a8870f789a3f34b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b30a18695c194e40fc05391c388720e25d8555c07c9dddee3439c49bbab219a\",\"dweb:/ipfs/QmdUqfoPcKdtQxSa34kUcWU2QEnykKVDktgL7GxpTBkYVm\"]},\"project:/contracts/royalties/HeirloomRoyaltiesV1.sol\":{\"keccak256\":\"0x141287904a2285dc3a9083d205191b15b664a9df843ddd05fd664e61658fa33d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f29cd7b606cee0e5ed2e823b542a7faec3fd6d9078006acb61ce323afe416e\",\"dweb:/ipfs/QmVDDdT7v73ipp1zpSy7vrDvDG4gAbpryE2tBVJ98pxXFX\"]},\"project:/contracts/utils/Constants.sol\":{\"keccak256\":\"0x7320c6acea80e57ca10657f96fb7d4d396462eff56730f083b93cd10e8867d4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74fa79e5efb5b1b26a9245401f09a6c290bd54c5cc2ebcf6abd3f1824bdf6c90\",\"dweb:/ipfs/QmQaNWBTkhBbG7MNFwcrgnM2o9jELjTFDcMLZNCJW9uk6p\"]},\"project:/contracts/utils/HeirloomEscrow.sol\":{\"keccak256\":\"0xb2c873c1a2e689899bbde0c6b98f468d70e1518d9bc94fd219830c4f1c070c2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3efa80b6120fb24db8d65394743859500d9c7a666b06266d07f1cc6311aa4e85\",\"dweb:/ipfs/QmXkftygCRKawqXdyaDiMBiRMPvaUDfpb3TqpkRQkEG5wN\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\";\r\n\r\n\r\nimport \"../utils/Constants.sol\";\r\nimport \"../HeirloomStorage.sol\";\r\nimport \"../erc1155/HeirloomLicenseNFT.sol\";\r\nimport \"../utils/HeirloomEscrow.sol\";\r\nimport \"../libs/LibPart.sol\";\r\n\r\n/**\r\n  @title base contract for heirloomdao marketplace implementation\r\n*/\r\n\r\nabstract contract IHeirloomMarketplace is \r\nHeirloomStorage,\r\nConstants,\r\nInitializable, \r\nAccessControlUpgradeable,\r\nPausableUpgradeable,\r\nUUPSUpgradeable {\r\n\r\n  using Address for address;\r\n  using SafeERC20 for IERC20;\r\n  using Counters for Counters.Counter;\r\n\r\n  modifier onlyActive(uint256 saleId){\r\n      require(_idToSaleItem[saleId].active == true && _idToSaleItem[saleId].isFuture == false, \"Heirloom Marketplace: inactive sale\");\r\n      require(block.timestamp < _idToSaleItem[saleId].end, \"Heirloom Marketplace: inactive sale\");\r\n      _;\r\n  }\r\n\r\n  modifier onlyFutureSale(uint256 saleId){\r\n      require(_idToSaleItem[saleId].isFuture == true, \"Heirloom Marketplace: must be future sale\");\r\n      require(block.timestamp >= _idToSaleItem[saleId].start, \"Heirloom Marketplace: start date not reached yet\");\r\n      _;\r\n  }\r\n\r\n  modifier onlyPassedDeadline(uint256 saleId){\r\n      require(block.timestamp >= _idToSaleItem[saleId].end, \"Heirloom Marketplace: active sale\");\r\n      _;\r\n  }\r\n\r\n  modifier onlyRepresentative(uint256 saleId){\r\n      require(_idToSaleItem[saleId].representative == _msgSender(), \"Heirloom Marketplace: caller is not license provider\"); \r\n      _;\r\n  }\r\n  \r\n  modifier onlyCorrectAmount(uint256 toPay){\r\n      require(msg.value >= toPay, \"Heirloom Marketplace: Incorrect payment amount\");\r\n      _;\r\n  }\r\n\r\n  modifier onlyVerified {\r\n      require(_isVerified[_msgSender()] == true, \"Heirloom Marketplace: Unverified caller\");\r\n      _;\r\n  }\r\n\r\n  function pause() public onlyRole(PAUSER_ROLE) {\r\n      _pause();\r\n  }\r\n\r\n  function unpause() public onlyRole(PAUSER_ROLE) {\r\n      _unpause();\r\n  }\r\n\r\n  /**\r\n    @notice sets new commission rbp\r\n    @param newBP new commission basis points\r\n  */\r\n  function setCommissionRBP(uint96 newBP) external onlyRole(ADMIN_ROLE) whenPaused {\r\n    COMMISSION_BP = newBP;\r\n    emit CommissionUpdated(newBP);\r\n  }\r\n\r\n  /**\r\n    @notice sets the listing fee\r\n    @param newListingFee new listing fee\r\n  */  \r\n  function setListingFee(uint256 newListingFee) external onlyRole(ADMIN_ROLE) whenPaused {\r\n      LISTING_FEE = newListingFee;\r\n      emit ListingFeeUpdated(newListingFee);\r\n  }\r\n\r\n  /**\r\n    @notice sets a new treasury address\r\n    @param newTreasury address to which treasury is updated\r\n  */\r\n  function updateTreasury(address newTreasury) external onlyRole(ADMIN_ROLE) whenPaused returns (address) {\r\n      _treasury = newTreasury;\r\n      emit TreasuryUpdated(newTreasury);\r\n      return newTreasury;\r\n  }\r\n\r\n  /**\r\n    @notice sets a new escrow address\r\n    @param newEscrow address to which escrow is updated\r\n  */\r\n  function updateEscrowSales(address newEscrow) external onlyRole(ADMIN_ROLE) whenPaused returns (address){\r\n      _escrowSales = newEscrow;\r\n      emit EscrowUpdated(newEscrow);\r\n      return newEscrow;\r\n  }\r\n  \r\n  /**\r\n    @notice sets a new escrow address\r\n    @param newEscrow address to which escrow is updated\r\n  */\r\n  function updateEscrowListed(address newEscrow) external onlyRole(ADMIN_ROLE) whenPaused returns (address){\r\n      _escrowListed = newEscrow;\r\n      emit EscrowUpdated(newEscrow);\r\n      return newEscrow;\r\n  }\r\n\r\n  /**\r\n    @notice verifies a user\r\n    @param user verifies a user on request of verifier\r\n  */\r\n  function verifyUser(address user) external virtual onlyRole(VERIFIER_ROLE) {\r\n    _isVerified[user] = true;\r\n    emit UserVerified(user);\r\n  }\r\n\r\n  /**\r\n    @notice verifies a user\r\n    @param user checks wheter a user is verified\r\n  */\r\n  function isUserVerified(address user) external view virtual returns (bool) {\r\n    return _isVerified[user];\r\n  }\r\n\r\n  /** \r\n    @notice creates a saleItem\r\n    @param nftContract nft contract for minting license nft\r\n    @param maxSupply token cap of license\r\n    @param refferer address of the refferer\r\n    @param start startDate of the sale\r\n    @param end enddate of sale\r\n    @param price of the item in the sale\r\n    @param rbp royalty basis points, percentage of royalty to be collected by license creator\r\n  */\r\n  function createSale(\r\n    address nftContract,\r\n    uint256 maxSupply,\r\n    address licenseProvider,\r\n    address refferer,\r\n    uint256 start,\r\n    uint256 end,\r\n    uint256 price,\r\n    uint96 rbp\r\n  ) public virtual;\r\n\r\n  /**\r\n    @notice activates a sale that starts of which its start date is < block timestamp\r\n    @param saleId id of the sale to be activated\r\n  */\r\n  function activateFutureSale(uint256 saleId) external onlyFutureSale(saleId) onlyRole(ADMIN_ROLE) {\r\n    _idToSaleItem[saleId].active = true;\r\n    _idToSaleItem[saleId].isFuture = false;\r\n    _futureSales.decrement();\r\n    emit SaleActivated(saleId);\r\n  }\r\n\r\n\r\n  /**\r\n    @notice gives the heirloom operator permission to sell an token amount on behalf of the user\r\n    @param nftContract nft contract address of the license nft\r\n    @param tokenId the tokenId of the Saas License nft\r\n    @param amount the amount of nfts to be put up for sale\r\n    @param  price to sell license for\r\n  */\r\n  function listLicense(\r\n    address nftContract, \r\n    uint256 tokenId, \r\n    uint256 price,\r\n    uint256 amount) public payable virtual;\r\n\r\n  /**\r\n    @notice allows creator of a sale to foricibly end a sale\r\n    @param saleId id of the sale to be forced closed\r\n  */\r\n  function forceCloseSale(uint256 saleId) external onlyActive(saleId) onlyRepresentative(saleId) whenNotPaused {\r\n    _idToSaleItem[saleId].active = false;\r\n    _closedSales.increment();\r\n    emit SaleClosed(saleId);\r\n  }\r\n\r\n  /**\r\n    @notice closes a sale id only if deadline is passed \r\n    @param saleId id of the sale to be closed\r\n  */\r\n  function closeSaleOnDeadline(uint256 saleId) external onlyPassedDeadline(saleId) onlyRole(ADMIN_ROLE) {\r\n    _idToSaleItem[saleId].active = false;\r\n    _closedSales.increment();\r\n    HeirloomLicenseNFT heirloomNftInstance = HeirloomLicenseNFT(_idToSaleItem[saleId].nftContract);\r\n    heirloomNftInstance.revokeApprovalForAll(_idToSaleItem[saleId].licenseProvider);\r\n    emit SaleClosed(saleId);\r\n  }\r\n\r\n  /**\r\n    @notice allows a user to participate in a license sale\r\n    @dev erc20 transfer needs to be pre-approved\r\n    @param saleId id of the ongoing sale\r\n    @param amount number of licenses to buy\r\n   */\r\n  function participate(uint256 saleId, uint256 amount) external payable virtual;\r\n\r\n  /**\r\n    @notice fetches all tokenIds listed for sale\r\n  */\r\n  function fetchListedLicenses() external view returns (LicenseItem [] memory) {\r\n    uint256 toFetch = _licenseItemIds.current() - _closedLicenseItems.current();\r\n    LicenseItem [] memory listedItems = new LicenseItem[](toFetch);\r\n    uint count = 0;\r\n    for(uint i = 0; i < _licenseItemIds.current(); i++){\r\n        if(_idToLicenseItem[i+1].status == ListedStatus.Open){\r\n            listedItems[count] = _idToLicenseItem[i+1];\r\n            count++; \r\n        }\r\n    }\r\n    return listedItems;\r\n  }\r\n\r\n  /**\r\n    @notice fetches a license with a given licenseid\r\n    @param licenseId id of the listed license\r\n  */\r\n  function fetchLicense(uint256 licenseId) public view returns (LicenseItem memory) {\r\n    return _idToLicenseItem[licenseId];\r\n  }\r\n\r\n  /**\r\n    @notice fetches all of the active nft license sales on the platform\r\n  */\r\n  function fetchActiveSales() external view returns (SaleItem [] memory) {\r\n    uint256 toFetch = _saleIds.current() - _closedSales.current() - _futureSales.current();\r\n    SaleItem [] memory activeSales = new SaleItem[](toFetch);\r\n    uint count = 0; \r\n    for(uint i = 0; i < _saleIds.current(); i++){\r\n        if(_idToSaleItem[i+1].active == true){\r\n            activeSales[count] = _idToSaleItem[i+1];\r\n            count++; \r\n        }\r\n    }\r\n    return activeSales;\r\n  }\r\n\r\n  /**\r\n    @notice retrieves a sale\r\n    @param saleId id of the sale to be retrieved\r\n  */\r\n  function fetchSale(uint256 saleId) public view returns (SaleItem memory) {\r\n      return _idToSaleItem[saleId];\r\n  }\r\n\r\n  /**\r\n    @notice transfers license item to send on tokenTransfer\r\n    @param licenseId id of the license to sell\r\n    @param amount amount to purchase \r\n  */\r\n  function purchaseLicense(uint256 licenseId, uint256 amount) external payable virtual;\r\n  \r\n  /**\r\n    @notice checks if license is active based on start and block.timestamp\r\n    @param start start time of license\r\n  */\r\n  function isActive(uint256 start) internal view returns (bool) {\r\n    return start > block.timestamp ? false : true;\r\n  }\r\n\r\n  /**\r\n    @notice checks if license is in the future based on start and block.timestamp\r\n    @param start start time of license\r\n  */\r\n  function isFuture(uint256 start) internal view returns (bool) {\r\n    return start > block.timestamp ? true : false;\r\n  }\r\n  \r\n  function _authorizeUpgrade(address newImplementation) internal override onlyRole(ADMIN_ROLE) whenPaused {}\r\n\r\n  function __HeirloomMarketplace_init (\r\n      address admin,\r\n      address verifier,\r\n      uint256 listingFee,\r\n      address hilo, \r\n      address treasury, \r\n      address escrowSales,\r\n      address escrowListed,\r\n      uint96 commissionBp\r\n    ) public initializer {\r\n      __AccessControl_init();\r\n      __Pausable_init();\r\n      _grantRole(ADMIN_ROLE, admin);\r\n      _setRoleAdmin(ADMIN_ROLE, ADMIN_ROLE);\r\n      _grantRole(PAUSER_ROLE, admin);\r\n      _setRoleAdmin(PAUSER_ROLE, ADMIN_ROLE);\r\n      _grantRole(VERIFIER_ROLE, verifier);\r\n      _setRoleAdmin(VERIFIER_ROLE, ADMIN_ROLE);\r\n      LISTING_FEE = listingFee;\r\n      COMMISSION_BP = commissionBp;\r\n      _hiloToken = hilo;\r\n      _escrowSales = escrowSales;\r\n      _escrowListed = escrowListed;\r\n      _treasury = treasury;\r\n  }\r\n}\r\n",
  "sourcePath": "C:\\Users\\DELL\\Documents\\heirloomdao\\contracts\\contracts\\interfaces\\IHeirloomMarketplace.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IHeirloomMarketplace.sol",
    "exportedSymbols": {
      "AbstractHeirloomRoyaltiesV1": [
        8174
      ],
      "AccessControl": [
        1518
      ],
      "AccessControlUpgradeable": [
        339
      ],
      "Address": [
        5166
      ],
      "AddressUpgradeable": [
        908
      ],
      "Constants": [
        8253
      ],
      "Context": [
        5273
      ],
      "ContextUpgradeable": [
        950
      ],
      "Counters": [
        5347
      ],
      "ERC1155": [
        3273
      ],
      "ERC1155Supply": [
        3569
      ],
      "ERC165": [
        5634
      ],
      "ERC165Upgradeable": [
        1197
      ],
      "ERC1967Upgrade": [
        1919
      ],
      "HeirloomEscrow": [
        8714
      ],
      "HeirloomLicenseNFT": [
        7008
      ],
      "HeirloomRoyaltiesV1": [
        8214
      ],
      "HeirloomStorage": [
        6502
      ],
      "IAccessControl": [
        1591
      ],
      "IAccessControlUpgradeable": [
        412
      ],
      "IBeacon": [
        1929
      ],
      "IERC1155": [
        3395
      ],
      "IERC1155MetadataURI": [
        3584
      ],
      "IERC1155Receiver": [
        3436
      ],
      "IERC165": [
        5646
      ],
      "IERC165Upgradeable": [
        1209
      ],
      "IERC1822Proxiable": [
        1601
      ],
      "IERC20": [
        4250
      ],
      "IHeirloomMarketplace": [
        7960
      ],
      "IHeirloomRoyaltiesV1": [
        7981
      ],
      "Initializable": [
        554
      ],
      "LibHeirloomRoyaltiesV1": [
        7987
      ],
      "LibPart": [
        8024
      ],
      "Pausable": [
        2137
      ],
      "PausableUpgradeable": [
        665
      ],
      "ReentrancyGuard": [
        2177
      ],
      "SafeERC20": [
        4871
      ],
      "StorageSlot": [
        5407
      ],
      "Strings": [
        5610
      ],
      "StringsUpgradeable": [
        1153
      ],
      "Types": [
        6687
      ],
      "UUPSUpgradeable": [
        2045
      ]
    },
    "id": 7961,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7166,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:44"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 7167,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7961,
        "sourceUnit": 555,
        "src": "58:75:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "id": 7168,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7961,
        "sourceUnit": 340,
        "src": "135:81:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 7169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7961,
        "sourceUnit": 666,
        "src": "218:78:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol",
        "id": 7170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7961,
        "sourceUnit": 2046,
        "src": "298:65:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/Constants.sol",
        "file": "../utils/Constants.sol",
        "id": 7171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7961,
        "sourceUnit": 8254,
        "src": "369:32:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/HeirloomStorage.sol",
        "file": "../HeirloomStorage.sol",
        "id": 7172,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7961,
        "sourceUnit": 6503,
        "src": "403:32:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/erc1155/HeirloomLicenseNFT.sol",
        "file": "../erc1155/HeirloomLicenseNFT.sol",
        "id": 7173,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7961,
        "sourceUnit": 7009,
        "src": "437:43:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/HeirloomEscrow.sol",
        "file": "../utils/HeirloomEscrow.sol",
        "id": 7174,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7961,
        "sourceUnit": 8715,
        "src": "482:37:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libs/LibPart.sol",
        "file": "../libs/LibPart.sol",
        "id": 7175,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7961,
        "sourceUnit": 8025,
        "src": "521:29:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7177,
              "name": "HeirloomStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6502,
              "src": "676:15:44"
            },
            "id": 7178,
            "nodeType": "InheritanceSpecifier",
            "src": "676:15:44"
          },
          {
            "baseName": {
              "id": 7179,
              "name": "Constants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8253,
              "src": "694:9:44"
            },
            "id": 7180,
            "nodeType": "InheritanceSpecifier",
            "src": "694:9:44"
          },
          {
            "baseName": {
              "id": 7181,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 554,
              "src": "706:13:44"
            },
            "id": 7182,
            "nodeType": "InheritanceSpecifier",
            "src": "706:13:44"
          },
          {
            "baseName": {
              "id": 7183,
              "name": "AccessControlUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 339,
              "src": "723:24:44"
            },
            "id": 7184,
            "nodeType": "InheritanceSpecifier",
            "src": "723:24:44"
          },
          {
            "baseName": {
              "id": 7185,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 665,
              "src": "750:19:44"
            },
            "id": 7186,
            "nodeType": "InheritanceSpecifier",
            "src": "750:19:44"
          },
          {
            "baseName": {
              "id": 7187,
              "name": "UUPSUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2045,
              "src": "772:15:44"
            },
            "id": 7188,
            "nodeType": "InheritanceSpecifier",
            "src": "772:15:44"
          }
        ],
        "canonicalName": "IHeirloomMarketplace",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7176,
          "nodeType": "StructuredDocumentation",
          "src": "554:74:44",
          "text": "@title base contract for heirloomdao marketplace implementation"
        },
        "fullyImplemented": false,
        "id": 7960,
        "linearizedBaseContracts": [
          7960,
          2045,
          1919,
          1601,
          665,
          339,
          1197,
          1209,
          412,
          950,
          554,
          8253,
          6502,
          6687
        ],
        "name": "IHeirloomMarketplace",
        "nameLocation": "650:20:44",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 7191,
            "libraryName": {
              "id": 7189,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5166,
              "src": "801:7:44"
            },
            "nodeType": "UsingForDirective",
            "src": "795:26:44",
            "typeName": {
              "id": 7190,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "813:7:44",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 7195,
            "libraryName": {
              "id": 7192,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4871,
              "src": "831:9:44"
            },
            "nodeType": "UsingForDirective",
            "src": "825:27:44",
            "typeName": {
              "id": 7194,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7193,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4250,
                "src": "845:6:44"
              },
              "referencedDeclaration": 4250,
              "src": "845:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4250",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "global": false,
            "id": 7199,
            "libraryName": {
              "id": 7196,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5347,
              "src": "862:8:44"
            },
            "nodeType": "UsingForDirective",
            "src": "856:36:44",
            "typeName": {
              "id": 7198,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7197,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5279,
                "src": "875:16:44"
              },
              "referencedDeclaration": 5279,
              "src": "875:16:44",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$5279_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "body": {
              "id": 7232,
              "nodeType": "Block",
              "src": "933:252:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 7209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 7204,
                                "name": "_idToSaleItem",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6496,
                                "src": "950:13:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                                  "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                                }
                              },
                              "id": 7206,
                              "indexExpression": {
                                "id": 7205,
                                "name": "saleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7201,
                                "src": "964:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "950:21:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                                "typeString": "struct Types.SaleItem storage ref"
                              }
                            },
                            "id": 7207,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6565,
                            "src": "950:28:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 7208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "982:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "950:36:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 7215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 7210,
                                "name": "_idToSaleItem",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6496,
                                "src": "990:13:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                                  "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                                }
                              },
                              "id": 7212,
                              "indexExpression": {
                                "id": 7211,
                                "name": "saleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7201,
                                "src": "1004:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "990:21:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                                "typeString": "struct Types.SaleItem storage ref"
                              }
                            },
                            "id": 7213,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isFuture",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6567,
                            "src": "990:30:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 7214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1024:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "990:39:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "950:79:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486569726c6f6f6d204d61726b6574706c6163653a20696e6163746976652073616c65",
                        "id": 7217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1031:37:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40568b78e6ff4d83d0263de5381f9f11517c5aa87233aacc657574745e46030b",
                          "typeString": "literal_string \"Heirloom Marketplace: inactive sale\""
                        },
                        "value": "Heirloom Marketplace: inactive sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40568b78e6ff4d83d0263de5381f9f11517c5aa87233aacc657574745e46030b",
                          "typeString": "literal_string \"Heirloom Marketplace: inactive sale\""
                        }
                      ],
                      "id": 7203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "942:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:127:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7219,
                  "nodeType": "ExpressionStatement",
                  "src": "942:127:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7221,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1086:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1086:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7223,
                              "name": "_idToSaleItem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6496,
                              "src": "1104:13:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                                "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                              }
                            },
                            "id": 7225,
                            "indexExpression": {
                              "id": 7224,
                              "name": "saleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7201,
                              "src": "1118:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1104:21:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                              "typeString": "struct Types.SaleItem storage ref"
                            }
                          },
                          "id": 7226,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6561,
                          "src": "1104:25:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1086:43:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486569726c6f6f6d204d61726b6574706c6163653a20696e6163746976652073616c65",
                        "id": 7228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1131:37:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40568b78e6ff4d83d0263de5381f9f11517c5aa87233aacc657574745e46030b",
                          "typeString": "literal_string \"Heirloom Marketplace: inactive sale\""
                        },
                        "value": "Heirloom Marketplace: inactive sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40568b78e6ff4d83d0263de5381f9f11517c5aa87233aacc657574745e46030b",
                          "typeString": "literal_string \"Heirloom Marketplace: inactive sale\""
                        }
                      ],
                      "id": 7220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1078:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:91:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7230,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:91:44"
                },
                {
                  "id": 7231,
                  "nodeType": "PlaceholderStatement",
                  "src": "1178:1:44"
                }
              ]
            },
            "id": 7233,
            "name": "onlyActive",
            "nameLocation": "907:10:44",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7201,
                  "mutability": "mutable",
                  "name": "saleId",
                  "nameLocation": "926:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7233,
                  "src": "918:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "917:16:44"
            },
            "src": "898:287:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7259,
              "nodeType": "Block",
              "src": "1230:233:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7238,
                              "name": "_idToSaleItem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6496,
                              "src": "1247:13:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                                "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                              }
                            },
                            "id": 7240,
                            "indexExpression": {
                              "id": 7239,
                              "name": "saleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7235,
                              "src": "1261:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1247:21:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                              "typeString": "struct Types.SaleItem storage ref"
                            }
                          },
                          "id": 7241,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isFuture",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6567,
                          "src": "1247:30:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 7242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1281:4:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1247:38:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486569726c6f6f6d204d61726b6574706c6163653a206d757374206265206675747572652073616c65",
                        "id": 7244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:43:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45ec8e305b902166c8a1fa3a56661f518af46db251b49d09d1a6ac229908b906",
                          "typeString": "literal_string \"Heirloom Marketplace: must be future sale\""
                        },
                        "value": "Heirloom Marketplace: must be future sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45ec8e305b902166c8a1fa3a56661f518af46db251b49d09d1a6ac229908b906",
                          "typeString": "literal_string \"Heirloom Marketplace: must be future sale\""
                        }
                      ],
                      "id": 7237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1239:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:92:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7246,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:92:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7248,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1348:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1348:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7250,
                              "name": "_idToSaleItem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6496,
                              "src": "1367:13:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                                "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                              }
                            },
                            "id": 7252,
                            "indexExpression": {
                              "id": 7251,
                              "name": "saleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7235,
                              "src": "1381:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1367:21:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                              "typeString": "struct Types.SaleItem storage ref"
                            }
                          },
                          "id": 7253,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6559,
                          "src": "1367:27:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1348:46:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486569726c6f6f6d204d61726b6574706c6163653a2073746172742064617465206e6f74207265616368656420796574",
                        "id": 7255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1396:50:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9157b9ec0d3f176072f16eb0070411c24906d50d3d9cd28e843ab251bb6c126",
                          "typeString": "literal_string \"Heirloom Marketplace: start date not reached yet\""
                        },
                        "value": "Heirloom Marketplace: start date not reached yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9157b9ec0d3f176072f16eb0070411c24906d50d3d9cd28e843ab251bb6c126",
                          "typeString": "literal_string \"Heirloom Marketplace: start date not reached yet\""
                        }
                      ],
                      "id": 7247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1340:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:107:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7257,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:107:44"
                },
                {
                  "id": 7258,
                  "nodeType": "PlaceholderStatement",
                  "src": "1456:1:44"
                }
              ]
            },
            "id": 7260,
            "name": "onlyFutureSale",
            "nameLocation": "1200:14:44",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7235,
                  "mutability": "mutable",
                  "name": "saleId",
                  "nameLocation": "1223:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7260,
                  "src": "1215:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:16:44"
            },
            "src": "1191:272:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7276,
              "nodeType": "Block",
              "src": "1512:115:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7265,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1529:5:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1529:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7267,
                              "name": "_idToSaleItem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6496,
                              "src": "1548:13:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                                "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                              }
                            },
                            "id": 7269,
                            "indexExpression": {
                              "id": 7268,
                              "name": "saleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7262,
                              "src": "1562:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1548:21:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                              "typeString": "struct Types.SaleItem storage ref"
                            }
                          },
                          "id": 7270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6561,
                          "src": "1548:25:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1529:44:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486569726c6f6f6d204d61726b6574706c6163653a206163746976652073616c65",
                        "id": 7272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1575:35:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3abd8ed4ff5948bfc2cac0546d28d162f0db5fb50e94ef46371d9d87057a9705",
                          "typeString": "literal_string \"Heirloom Marketplace: active sale\""
                        },
                        "value": "Heirloom Marketplace: active sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3abd8ed4ff5948bfc2cac0546d28d162f0db5fb50e94ef46371d9d87057a9705",
                          "typeString": "literal_string \"Heirloom Marketplace: active sale\""
                        }
                      ],
                      "id": 7264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1521:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:90:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7274,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:90:44"
                },
                {
                  "id": 7275,
                  "nodeType": "PlaceholderStatement",
                  "src": "1620:1:44"
                }
              ]
            },
            "id": 7277,
            "name": "onlyPassedDeadline",
            "nameLocation": "1478:18:44",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7262,
                  "mutability": "mutable",
                  "name": "saleId",
                  "nameLocation": "1505:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7277,
                  "src": "1497:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:16:44"
            },
            "src": "1469:158:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7293,
              "nodeType": "Block",
              "src": "1676:143:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7282,
                              "name": "_idToSaleItem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6496,
                              "src": "1693:13:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                                "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                              }
                            },
                            "id": 7284,
                            "indexExpression": {
                              "id": 7283,
                              "name": "saleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7279,
                              "src": "1707:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1693:21:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                              "typeString": "struct Types.SaleItem storage ref"
                            }
                          },
                          "id": 7285,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "representative",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6547,
                          "src": "1693:36:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7286,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 935,
                            "src": "1733:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1733:12:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1693:52:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486569726c6f6f6d204d61726b6574706c6163653a2063616c6c6572206973206e6f74206c6963656e73652070726f7669646572",
                        "id": 7289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1747:54:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d987819820a855026b6e7a21a4d30417df8fddeeedffcdad83fd2c449ed4d87",
                          "typeString": "literal_string \"Heirloom Marketplace: caller is not license provider\""
                        },
                        "value": "Heirloom Marketplace: caller is not license provider"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d987819820a855026b6e7a21a4d30417df8fddeeedffcdad83fd2c449ed4d87",
                          "typeString": "literal_string \"Heirloom Marketplace: caller is not license provider\""
                        }
                      ],
                      "id": 7281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1685:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:117:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7291,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:117:44"
                },
                {
                  "id": 7292,
                  "nodeType": "PlaceholderStatement",
                  "src": "1812:1:44"
                }
              ]
            },
            "id": 7294,
            "name": "onlyRepresentative",
            "nameLocation": "1642:18:44",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7279,
                  "mutability": "mutable",
                  "name": "saleId",
                  "nameLocation": "1669:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7294,
                  "src": "1661:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1660:16:44"
            },
            "src": "1633:186:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7307,
              "nodeType": "Block",
              "src": "1868:102:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7299,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1885:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1885:9:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7301,
                          "name": "toPay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7296,
                          "src": "1898:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1885:18:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486569726c6f6f6d204d61726b6574706c6163653a20496e636f7272656374207061796d656e7420616d6f756e74",
                        "id": 7303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:48:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9651d3d828ed0bbc58a016658c6d64f529f322622ba178040c56ed059ba03092",
                          "typeString": "literal_string \"Heirloom Marketplace: Incorrect payment amount\""
                        },
                        "value": "Heirloom Marketplace: Incorrect payment amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9651d3d828ed0bbc58a016658c6d64f529f322622ba178040c56ed059ba03092",
                          "typeString": "literal_string \"Heirloom Marketplace: Incorrect payment amount\""
                        }
                      ],
                      "id": 7298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1877:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:77:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7305,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:77:44"
                },
                {
                  "id": 7306,
                  "nodeType": "PlaceholderStatement",
                  "src": "1963:1:44"
                }
              ]
            },
            "id": 7308,
            "name": "onlyCorrectAmount",
            "nameLocation": "1836:17:44",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7296,
                  "mutability": "mutable",
                  "name": "toPay",
                  "nameLocation": "1862:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7308,
                  "src": "1854:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1853:15:44"
            },
            "src": "1827:143:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7321,
              "nodeType": "Block",
              "src": "1998:110:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 7311,
                            "name": "_isVerified",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6491,
                            "src": "2015:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 7314,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 7312,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 935,
                              "src": "2027:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 7313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2027:12:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2015:25:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 7315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2044:4:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2015:33:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486569726c6f6f6d204d61726b6574706c6163653a20556e76657269666965642063616c6c6572",
                        "id": 7317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2050:41:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c839025a96d47c3f04b2a284c8f6d6234dffc20504703e97d616ee0c1373320f",
                          "typeString": "literal_string \"Heirloom Marketplace: Unverified caller\""
                        },
                        "value": "Heirloom Marketplace: Unverified caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c839025a96d47c3f04b2a284c8f6d6234dffc20504703e97d616ee0c1373320f",
                          "typeString": "literal_string \"Heirloom Marketplace: Unverified caller\""
                        }
                      ],
                      "id": 7310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2007:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2007:85:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7319,
                  "nodeType": "ExpressionStatement",
                  "src": "2007:85:44"
                },
                {
                  "id": 7320,
                  "nodeType": "PlaceholderStatement",
                  "src": "2101:1:44"
                }
              ]
            },
            "id": 7322,
            "name": "onlyVerified",
            "nameLocation": "1985:12:44",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1998:0:44"
            },
            "src": "1976:132:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7331,
              "nodeType": "Block",
              "src": "2160:23:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7328,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "2169:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2169:8:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7330,
                  "nodeType": "ExpressionStatement",
                  "src": "2169:8:44"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 7332,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7325,
                    "name": "PAUSER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8227,
                    "src": "2147:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7326,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7324,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2138:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2138:21:44"
              }
            ],
            "name": "pause",
            "nameLocation": "2123:5:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2128:2:44"
            },
            "returnParameters": {
              "id": 7327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2160:0:44"
            },
            "scope": 7960,
            "src": "2114:69:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7341,
              "nodeType": "Block",
              "src": "2237:25:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7338,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "2246:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:10:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7340,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:10:44"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 7342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7335,
                    "name": "PAUSER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8227,
                    "src": "2224:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7336,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7334,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2215:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2215:21:44"
              }
            ],
            "name": "unpause",
            "nameLocation": "2198:7:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2205:2:44"
            },
            "returnParameters": {
              "id": 7337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2237:0:44"
            },
            "scope": 7960,
            "src": "2189:73:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7361,
              "nodeType": "Block",
              "src": "2445:70:44",
              "statements": [
                {
                  "expression": {
                    "id": 7355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7353,
                      "name": "COMMISSION_BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6464,
                      "src": "2452:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7354,
                      "name": "newBP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7345,
                      "src": "2468:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "2452:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 7356,
                  "nodeType": "ExpressionStatement",
                  "src": "2452:21:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7358,
                        "name": "newBP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7345,
                        "src": "2503:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 7357,
                      "name": "CommissionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6686,
                      "src": "2485:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint96_$returns$__$",
                        "typeString": "function (uint96)"
                      }
                    },
                    "id": 7359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2485:24:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7360,
                  "nodeType": "EmitStatement",
                  "src": "2480:29:44"
                }
              ]
            },
            "documentation": {
              "id": 7343,
              "nodeType": "StructuredDocumentation",
              "src": "2268:92:44",
              "text": "@notice sets new commission rbp\n@param newBP new commission basis points"
            },
            "functionSelector": "34afd755",
            "id": 7362,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7348,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8237,
                    "src": "2422:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7349,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7347,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2413:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2413:20:44"
              },
              {
                "id": 7351,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7350,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 627,
                  "src": "2434:10:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2434:10:44"
              }
            ],
            "name": "setCommissionRBP",
            "nameLocation": "2373:16:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7345,
                  "mutability": "mutable",
                  "name": "newBP",
                  "nameLocation": "2397:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7362,
                  "src": "2390:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 7344,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:14:44"
            },
            "returnParameters": {
              "id": 7352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2445:0:44"
            },
            "scope": 7960,
            "src": "2364:151:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7381,
              "nodeType": "Block",
              "src": "2699:88:44",
              "statements": [
                {
                  "expression": {
                    "id": 7375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7373,
                      "name": "LISTING_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6462,
                      "src": "2708:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7374,
                      "name": "newListingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7365,
                      "src": "2722:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2708:27:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7376,
                  "nodeType": "ExpressionStatement",
                  "src": "2708:27:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7378,
                        "name": "newListingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7365,
                        "src": "2767:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7377,
                      "name": "ListingFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6681,
                      "src": "2749:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2749:32:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7380,
                  "nodeType": "EmitStatement",
                  "src": "2744:37:44"
                }
              ]
            },
            "documentation": {
              "id": 7363,
              "nodeType": "StructuredDocumentation",
              "src": "2521:85:44",
              "text": "@notice sets the listing fee\n@param newListingFee new listing fee"
            },
            "functionSelector": "131dbd09",
            "id": 7382,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7368,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8237,
                    "src": "2676:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7367,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2667:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2667:20:44"
              },
              {
                "id": 7371,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7370,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 627,
                  "src": "2688:10:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2688:10:44"
              }
            ],
            "name": "setListingFee",
            "nameLocation": "2621:13:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7365,
                  "mutability": "mutable",
                  "name": "newListingFee",
                  "nameLocation": "2643:13:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7382,
                  "src": "2635:21:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2635:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2634:23:44"
            },
            "returnParameters": {
              "id": 7372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2699:0:44"
            },
            "scope": 7960,
            "src": "2612:175:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7405,
              "nodeType": "Block",
              "src": "3012:107:44",
              "statements": [
                {
                  "expression": {
                    "id": 7397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7395,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6472,
                      "src": "3021:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7396,
                      "name": "newTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7385,
                      "src": "3033:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3021:23:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7398,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:23:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7400,
                        "name": "newTreasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7385,
                        "src": "3074:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7399,
                      "name": "TreasuryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6661,
                      "src": "3058:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3058:28:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7402,
                  "nodeType": "EmitStatement",
                  "src": "3053:33:44"
                },
                {
                  "expression": {
                    "id": 7403,
                    "name": "newTreasury",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7385,
                    "src": "3102:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7394,
                  "id": 7404,
                  "nodeType": "Return",
                  "src": "3095:18:44"
                }
              ]
            },
            "documentation": {
              "id": 7383,
              "nodeType": "StructuredDocumentation",
              "src": "2793:111:44",
              "text": "@notice sets a new treasury address\n@param newTreasury address to which treasury is updated"
            },
            "functionSelector": "7f51bb1f",
            "id": 7406,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7388,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8237,
                    "src": "2971:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7389,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7387,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2962:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2962:20:44"
              },
              {
                "id": 7391,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7390,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 627,
                  "src": "2983:10:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2983:10:44"
              }
            ],
            "name": "updateTreasury",
            "nameLocation": "2917:14:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7385,
                  "mutability": "mutable",
                  "name": "newTreasury",
                  "nameLocation": "2940:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7406,
                  "src": "2932:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2932:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2931:21:44"
            },
            "returnParameters": {
              "id": 7394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7406,
                  "src": "3003:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3002:9:44"
            },
            "scope": 7960,
            "src": "2908:211:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7429,
              "nodeType": "Block",
              "src": "3338:102:44",
              "statements": [
                {
                  "expression": {
                    "id": 7421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7419,
                      "name": "_escrowSales",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "3347:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7420,
                      "name": "newEscrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7409,
                      "src": "3362:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3347:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7422,
                  "nodeType": "ExpressionStatement",
                  "src": "3347:24:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7424,
                        "name": "newEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7409,
                        "src": "3399:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7423,
                      "name": "EscrowUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6666,
                      "src": "3385:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:24:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7426,
                  "nodeType": "EmitStatement",
                  "src": "3380:29:44"
                },
                {
                  "expression": {
                    "id": 7427,
                    "name": "newEscrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7409,
                    "src": "3425:9:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7418,
                  "id": 7428,
                  "nodeType": "Return",
                  "src": "3418:16:44"
                }
              ]
            },
            "documentation": {
              "id": 7407,
              "nodeType": "StructuredDocumentation",
              "src": "3125:105:44",
              "text": "@notice sets a new escrow address\n@param newEscrow address to which escrow is updated"
            },
            "functionSelector": "ecb23be6",
            "id": 7430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7412,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8237,
                    "src": "3298:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7413,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7411,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "3289:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "3289:20:44"
              },
              {
                "id": 7415,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7414,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 627,
                  "src": "3310:10:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "3310:10:44"
              }
            ],
            "name": "updateEscrowSales",
            "nameLocation": "3243:17:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7409,
                  "mutability": "mutable",
                  "name": "newEscrow",
                  "nameLocation": "3269:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7430,
                  "src": "3261:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3261:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3260:19:44"
            },
            "returnParameters": {
              "id": 7418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7417,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7430,
                  "src": "3330:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3330:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3329:9:44"
            },
            "scope": 7960,
            "src": "3234:206:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7453,
              "nodeType": "Block",
              "src": "3662:103:44",
              "statements": [
                {
                  "expression": {
                    "id": 7445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7443,
                      "name": "_escrowListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6470,
                      "src": "3671:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7444,
                      "name": "newEscrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7433,
                      "src": "3687:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3671:25:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7446,
                  "nodeType": "ExpressionStatement",
                  "src": "3671:25:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7448,
                        "name": "newEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7433,
                        "src": "3724:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7447,
                      "name": "EscrowUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6666,
                      "src": "3710:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3710:24:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7450,
                  "nodeType": "EmitStatement",
                  "src": "3705:29:44"
                },
                {
                  "expression": {
                    "id": 7451,
                    "name": "newEscrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7433,
                    "src": "3750:9:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7442,
                  "id": 7452,
                  "nodeType": "Return",
                  "src": "3743:16:44"
                }
              ]
            },
            "documentation": {
              "id": 7431,
              "nodeType": "StructuredDocumentation",
              "src": "3448:105:44",
              "text": "@notice sets a new escrow address\n@param newEscrow address to which escrow is updated"
            },
            "functionSelector": "5d79ec9e",
            "id": 7454,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7436,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8237,
                    "src": "3622:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7437,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7435,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "3613:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "3613:20:44"
              },
              {
                "id": 7439,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7438,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 627,
                  "src": "3634:10:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "3634:10:44"
              }
            ],
            "name": "updateEscrowListed",
            "nameLocation": "3566:18:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7433,
                  "mutability": "mutable",
                  "name": "newEscrow",
                  "nameLocation": "3593:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7454,
                  "src": "3585:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3585:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3584:19:44"
            },
            "returnParameters": {
              "id": 7442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7441,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7454,
                  "src": "3654:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3654:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3653:9:44"
            },
            "scope": 7960,
            "src": "3557:208:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7473,
              "nodeType": "Block",
              "src": "3944:67:44",
              "statements": [
                {
                  "expression": {
                    "id": 7467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7463,
                        "name": "_isVerified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6491,
                        "src": "3951:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7465,
                      "indexExpression": {
                        "id": 7464,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7457,
                        "src": "3963:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3951:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3971:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3951:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7468,
                  "nodeType": "ExpressionStatement",
                  "src": "3951:24:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7470,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7457,
                        "src": "4000:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7469,
                      "name": "UserVerified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6676,
                      "src": "3987:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3987:18:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7472,
                  "nodeType": "EmitStatement",
                  "src": "3982:23:44"
                }
              ]
            },
            "documentation": {
              "id": 7455,
              "nodeType": "StructuredDocumentation",
              "src": "3771:94:44",
              "text": "@notice verifies a user\n@param user verifies a user on request of verifier"
            },
            "functionSelector": "4d813120",
            "id": 7474,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7460,
                    "name": "VERIFIER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8247,
                    "src": "3929:13:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7461,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7459,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "3920:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "3920:23:44"
              }
            ],
            "name": "verifyUser",
            "nameLocation": "3878:10:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7457,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3897:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7474,
                  "src": "3889:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3889:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3888:14:44"
            },
            "returnParameters": {
              "id": 7462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3944:0:44"
            },
            "scope": 7960,
            "src": "3869:142:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7486,
              "nodeType": "Block",
              "src": "4184:37:44",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7482,
                      "name": "_isVerified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6491,
                      "src": "4198:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 7484,
                    "indexExpression": {
                      "id": 7483,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7477,
                      "src": "4210:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4198:17:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7481,
                  "id": 7485,
                  "nodeType": "Return",
                  "src": "4191:24:44"
                }
              ]
            },
            "documentation": {
              "id": 7475,
              "nodeType": "StructuredDocumentation",
              "src": "4017:88:44",
              "text": "@notice verifies a user\n@param user checks wheter a user is verified"
            },
            "functionSelector": "ace417e0",
            "id": 7487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUserVerified",
            "nameLocation": "4118:14:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7477,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4141:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7487,
                  "src": "4133:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4133:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4132:14:44"
            },
            "returnParameters": {
              "id": 7481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7480,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7487,
                  "src": "4178:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7479,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4178:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4177:6:44"
            },
            "scope": 7960,
            "src": "4109:112:44",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7488,
              "nodeType": "StructuredDocumentation",
              "src": "4227:400:44",
              "text": "@notice creates a saleItem\n@param nftContract nft contract for minting license nft\n@param maxSupply token cap of license\n@param refferer address of the refferer\n@param start startDate of the sale\n@param end enddate of sale\n@param price of the item in the sale\n@param rbp royalty basis points, percentage of royalty to be collected by license creator"
            },
            "functionSelector": "d663da03",
            "id": 7507,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createSale",
            "nameLocation": "4640:10:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7490,
                  "mutability": "mutable",
                  "name": "nftContract",
                  "nameLocation": "4665:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7507,
                  "src": "4657:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7492,
                  "mutability": "mutable",
                  "name": "maxSupply",
                  "nameLocation": "4691:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7507,
                  "src": "4683:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4683:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7494,
                  "mutability": "mutable",
                  "name": "licenseProvider",
                  "nameLocation": "4715:15:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7507,
                  "src": "4707:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4707:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7496,
                  "mutability": "mutable",
                  "name": "refferer",
                  "nameLocation": "4745:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7507,
                  "src": "4737:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4737:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7498,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "4768:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7507,
                  "src": "4760:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4760:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7500,
                  "mutability": "mutable",
                  "name": "end",
                  "nameLocation": "4788:3:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7507,
                  "src": "4780:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4780:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7502,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "4806:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7507,
                  "src": "4798:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4798:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7504,
                  "mutability": "mutable",
                  "name": "rbp",
                  "nameLocation": "4825:3:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7507,
                  "src": "4818:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 7503,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4818:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4650:183:44"
            },
            "returnParameters": {
              "id": 7506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4848:0:44"
            },
            "scope": 7960,
            "src": "4631:218:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7542,
              "nodeType": "Block",
              "src": "5102:157:44",
              "statements": [
                {
                  "expression": {
                    "id": 7524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7519,
                          "name": "_idToSaleItem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6496,
                          "src": "5109:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                            "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                          }
                        },
                        "id": 7521,
                        "indexExpression": {
                          "id": 7520,
                          "name": "saleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7510,
                          "src": "5123:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5109:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                          "typeString": "struct Types.SaleItem storage ref"
                        }
                      },
                      "id": 7522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6565,
                      "src": "5109:28:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5140:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5109:35:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7525,
                  "nodeType": "ExpressionStatement",
                  "src": "5109:35:44"
                },
                {
                  "expression": {
                    "id": 7531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7526,
                          "name": "_idToSaleItem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6496,
                          "src": "5151:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                            "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                          }
                        },
                        "id": 7528,
                        "indexExpression": {
                          "id": 7527,
                          "name": "saleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7510,
                          "src": "5165:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5151:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                          "typeString": "struct Types.SaleItem storage ref"
                        }
                      },
                      "id": 7529,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isFuture",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6567,
                      "src": "5151:30:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 7530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5184:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5151:38:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7532,
                  "nodeType": "ExpressionStatement",
                  "src": "5151:38:44"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7533,
                        "name": "_futureSales",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6487,
                        "src": "5196:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5279_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 7535,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decrement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5333,
                      "src": "5196:22:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5279_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5279_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 7536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5196:24:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7537,
                  "nodeType": "ExpressionStatement",
                  "src": "5196:24:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7539,
                        "name": "saleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7510,
                        "src": "5246:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7538,
                      "name": "SaleActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6605,
                      "src": "5232:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5232:21:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7541,
                  "nodeType": "EmitStatement",
                  "src": "5227:26:44"
                }
              ]
            },
            "documentation": {
              "id": 7508,
              "nodeType": "StructuredDocumentation",
              "src": "4855:146:44",
              "text": "@notice activates a sale that starts of which its start date is < block timestamp\n@param saleId id of the sale to be activated"
            },
            "functionSelector": "018e0838",
            "id": 7543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7513,
                    "name": "saleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7510,
                    "src": "5073:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 7514,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7512,
                  "name": "onlyFutureSale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7260,
                  "src": "5058:14:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "5058:22:44"
              },
              {
                "arguments": [
                  {
                    "id": 7516,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8237,
                    "src": "5090:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7517,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7515,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "5081:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "5081:20:44"
              }
            ],
            "name": "activateFutureSale",
            "nameLocation": "5014:18:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7510,
                  "mutability": "mutable",
                  "name": "saleId",
                  "nameLocation": "5041:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7543,
                  "src": "5033:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5033:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5032:16:44"
            },
            "returnParameters": {
              "id": 7518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5102:0:44"
            },
            "scope": 7960,
            "src": "5005:254:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7544,
              "nodeType": "StructuredDocumentation",
              "src": "5267:326:44",
              "text": "@notice gives the heirloom operator permission to sell an token amount on behalf of the user\n@param nftContract nft contract address of the license nft\n@param tokenId the tokenId of the Saas License nft\n@param amount the amount of nfts to be put up for sale\n@param  price to sell license for"
            },
            "functionSelector": "e5c542bf",
            "id": 7555,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "listLicense",
            "nameLocation": "5606:11:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7546,
                  "mutability": "mutable",
                  "name": "nftContract",
                  "nameLocation": "5632:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7555,
                  "src": "5624:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5624:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7548,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5659:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7555,
                  "src": "5651:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5651:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7550,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "5682:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7555,
                  "src": "5674:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5674:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7552,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5702:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7555,
                  "src": "5694:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5694:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5617:92:44"
            },
            "returnParameters": {
              "id": 7554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5732:0:44"
            },
            "scope": 7960,
            "src": "5597:136:44",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7585,
              "nodeType": "Block",
              "src": "5977:110:44",
              "statements": [
                {
                  "expression": {
                    "id": 7574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7569,
                          "name": "_idToSaleItem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6496,
                          "src": "5984:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                            "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                          }
                        },
                        "id": 7571,
                        "indexExpression": {
                          "id": 7570,
                          "name": "saleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7558,
                          "src": "5998:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5984:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                          "typeString": "struct Types.SaleItem storage ref"
                        }
                      },
                      "id": 7572,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6565,
                      "src": "5984:28:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 7573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6015:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5984:36:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7575,
                  "nodeType": "ExpressionStatement",
                  "src": "5984:36:44"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7576,
                        "name": "_closedSales",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6478,
                        "src": "6027:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5279_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 7578,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5305,
                      "src": "6027:22:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5279_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5279_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 7579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6027:24:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7580,
                  "nodeType": "ExpressionStatement",
                  "src": "6027:24:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7582,
                        "name": "saleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7558,
                        "src": "6074:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7581,
                      "name": "SaleClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6600,
                      "src": "6063:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6063:18:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7584,
                  "nodeType": "EmitStatement",
                  "src": "6058:23:44"
                }
              ]
            },
            "documentation": {
              "id": 7556,
              "nodeType": "StructuredDocumentation",
              "src": "5739:125:44",
              "text": "@notice allows creator of a sale to foricibly end a sale\n@param saleId id of the sale to be forced closed"
            },
            "functionSelector": "7802bd43",
            "id": 7586,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7561,
                    "name": "saleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7558,
                    "src": "5928:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 7562,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7560,
                  "name": "onlyActive",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7233,
                  "src": "5917:10:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "5917:18:44"
              },
              {
                "arguments": [
                  {
                    "id": 7564,
                    "name": "saleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7558,
                    "src": "5955:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 7565,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7563,
                  "name": "onlyRepresentative",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7294,
                  "src": "5936:18:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "5936:26:44"
              },
              {
                "id": 7567,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7566,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 616,
                  "src": "5963:13:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "5963:13:44"
              }
            ],
            "name": "forceCloseSale",
            "nameLocation": "5877:14:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7558,
                  "mutability": "mutable",
                  "name": "saleId",
                  "nameLocation": "5900:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7586,
                  "src": "5892:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5892:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5891:16:44"
            },
            "returnParameters": {
              "id": 7568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5977:0:44"
            },
            "scope": 7960,
            "src": "5868:219:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7633,
              "nodeType": "Block",
              "src": "6313:297:44",
              "statements": [
                {
                  "expression": {
                    "id": 7603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7598,
                          "name": "_idToSaleItem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6496,
                          "src": "6320:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                            "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                          }
                        },
                        "id": 7600,
                        "indexExpression": {
                          "id": 7599,
                          "name": "saleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7589,
                          "src": "6334:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6320:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                          "typeString": "struct Types.SaleItem storage ref"
                        }
                      },
                      "id": 7601,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6565,
                      "src": "6320:28:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 7602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6351:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6320:36:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7604,
                  "nodeType": "ExpressionStatement",
                  "src": "6320:36:44"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7605,
                        "name": "_closedSales",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6478,
                        "src": "6363:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5279_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 7607,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5305,
                      "src": "6363:22:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5279_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5279_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 7608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6363:24:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7609,
                  "nodeType": "ExpressionStatement",
                  "src": "6363:24:44"
                },
                {
                  "assignments": [
                    7612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7612,
                      "mutability": "mutable",
                      "name": "heirloomNftInstance",
                      "nameLocation": "6413:19:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 7633,
                      "src": "6394:38:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HeirloomLicenseNFT_$7008",
                        "typeString": "contract HeirloomLicenseNFT"
                      },
                      "typeName": {
                        "id": 7611,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7610,
                          "name": "HeirloomLicenseNFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7008,
                          "src": "6394:18:44"
                        },
                        "referencedDeclaration": 7008,
                        "src": "6394:18:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HeirloomLicenseNFT_$7008",
                          "typeString": "contract HeirloomLicenseNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7619,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7614,
                            "name": "_idToSaleItem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6496,
                            "src": "6454:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                              "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                            }
                          },
                          "id": 7616,
                          "indexExpression": {
                            "id": 7615,
                            "name": "saleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7589,
                            "src": "6468:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6454:21:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                            "typeString": "struct Types.SaleItem storage ref"
                          }
                        },
                        "id": 7617,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6551,
                        "src": "6454:33:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7613,
                      "name": "HeirloomLicenseNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7008,
                      "src": "6435:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_HeirloomLicenseNFT_$7008_$",
                        "typeString": "type(contract HeirloomLicenseNFT)"
                      }
                    },
                    "id": 7618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6435:53:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HeirloomLicenseNFT_$7008",
                      "typeString": "contract HeirloomLicenseNFT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6394:94:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7623,
                            "name": "_idToSaleItem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6496,
                            "src": "6536:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                              "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                            }
                          },
                          "id": 7625,
                          "indexExpression": {
                            "id": 7624,
                            "name": "saleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7589,
                            "src": "6550:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6536:21:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                            "typeString": "struct Types.SaleItem storage ref"
                          }
                        },
                        "id": 7626,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "licenseProvider",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6545,
                        "src": "6536:37:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7620,
                        "name": "heirloomNftInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7612,
                        "src": "6495:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HeirloomLicenseNFT_$7008",
                          "typeString": "contract HeirloomLicenseNFT"
                        }
                      },
                      "id": 7622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "revokeApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6883,
                      "src": "6495:40:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6495:79:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7628,
                  "nodeType": "ExpressionStatement",
                  "src": "6495:79:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7630,
                        "name": "saleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7589,
                        "src": "6597:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7629,
                      "name": "SaleClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6600,
                      "src": "6586:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6586:18:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7632,
                  "nodeType": "EmitStatement",
                  "src": "6581:23:44"
                }
              ]
            },
            "documentation": {
              "id": 7587,
              "nodeType": "StructuredDocumentation",
              "src": "6093:114:44",
              "text": "@notice closes a sale id only if deadline is passed \n@param saleId id of the sale to be closed"
            },
            "functionSelector": "72ff91b3",
            "id": 7634,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7592,
                    "name": "saleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7589,
                    "src": "6284:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 7593,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7591,
                  "name": "onlyPassedDeadline",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7277,
                  "src": "6265:18:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "6265:26:44"
              },
              {
                "arguments": [
                  {
                    "id": 7595,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8237,
                    "src": "6301:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7594,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "6292:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "6292:20:44"
              }
            ],
            "name": "closeSaleOnDeadline",
            "nameLocation": "6220:19:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7589,
                  "mutability": "mutable",
                  "name": "saleId",
                  "nameLocation": "6248:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7634,
                  "src": "6240:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6240:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6239:16:44"
            },
            "returnParameters": {
              "id": 7597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6313:0:44"
            },
            "scope": 7960,
            "src": "6211:399:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 7635,
              "nodeType": "StructuredDocumentation",
              "src": "6616:207:44",
              "text": "@notice allows a user to participate in a license sale\n@dev erc20 transfer needs to be pre-approved\n@param saleId id of the ongoing sale\n@param amount number of licenses to buy"
            },
            "functionSelector": "129874aa",
            "id": 7642,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "participate",
            "nameLocation": "6836:11:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7637,
                  "mutability": "mutable",
                  "name": "saleId",
                  "nameLocation": "6856:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7642,
                  "src": "6848:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6848:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7639,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6872:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7642,
                  "src": "6864:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6864:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6847:32:44"
            },
            "returnParameters": {
              "id": 7641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6904:0:44"
            },
            "scope": 7960,
            "src": "6827:78:44",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7716,
              "nodeType": "Block",
              "src": "7051:423:44",
              "statements": [
                {
                  "assignments": [
                    7651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7651,
                      "mutability": "mutable",
                      "name": "toFetch",
                      "nameLocation": "7066:7:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 7716,
                      "src": "7058:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7058:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7659,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 7652,
                          "name": "_licenseItemIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6481,
                          "src": "7076:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$5279_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 7653,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5291,
                        "src": "7076:23:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5279_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5279_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 7654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7076:25:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 7655,
                          "name": "_closedLicenseItems",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6484,
                          "src": "7104:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$5279_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 7656,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5291,
                        "src": "7104:27:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5279_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5279_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 7657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7104:29:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7076:57:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7058:75:44"
                },
                {
                  "assignments": [
                    7664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7664,
                      "mutability": "mutable",
                      "name": "listedItems",
                      "nameLocation": "7162:11:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 7716,
                      "src": "7140:33:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LicenseItem_$6586_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Types.LicenseItem[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7662,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 7661,
                            "name": "LicenseItem",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6586,
                            "src": "7140:11:44"
                          },
                          "referencedDeclaration": 6586,
                          "src": "7140:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LicenseItem_$6586_storage_ptr",
                            "typeString": "struct Types.LicenseItem"
                          }
                        },
                        "id": 7663,
                        "nodeType": "ArrayTypeName",
                        "src": "7140:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LicenseItem_$6586_storage_$dyn_storage_ptr",
                          "typeString": "struct Types.LicenseItem[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7671,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7669,
                        "name": "toFetch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7651,
                        "src": "7194:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7176:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_LicenseItem_$6586_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Types.LicenseItem memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7666,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 7665,
                            "name": "LicenseItem",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6586,
                            "src": "7180:11:44"
                          },
                          "referencedDeclaration": 6586,
                          "src": "7180:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LicenseItem_$6586_storage_ptr",
                            "typeString": "struct Types.LicenseItem"
                          }
                        },
                        "id": 7667,
                        "nodeType": "ArrayTypeName",
                        "src": "7180:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LicenseItem_$6586_storage_$dyn_storage_ptr",
                          "typeString": "struct Types.LicenseItem[]"
                        }
                      }
                    },
                    "id": 7670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7176:26:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LicenseItem_$6586_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Types.LicenseItem memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7140:62:44"
                },
                {
                  "assignments": [
                    7673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7673,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "7214:5:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 7716,
                      "src": "7209:10:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7672,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7209:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7675,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 7674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7222:1:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7209:14:44"
                },
                {
                  "body": {
                    "id": 7712,
                    "nodeType": "Block",
                    "src": "7281:163:44",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ListedStatus_$6541",
                            "typeString": "enum Types.ListedStatus"
                          },
                          "id": 7696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 7688,
                                "name": "_idToLicenseItem",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6501,
                                "src": "7295:16:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LicenseItem_$6586_storage_$",
                                  "typeString": "mapping(uint256 => struct Types.LicenseItem storage ref)"
                                }
                              },
                              "id": 7692,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7689,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7677,
                                  "src": "7312:1:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 7690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7314:1:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7312:3:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7295:21:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LicenseItem_$6586_storage",
                                "typeString": "struct Types.LicenseItem storage ref"
                              }
                            },
                            "id": 7693,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6585,
                            "src": "7295:28:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ListedStatus_$6541",
                              "typeString": "enum Types.ListedStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 7694,
                              "name": "ListedStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6541,
                              "src": "7327:12:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ListedStatus_$6541_$",
                                "typeString": "type(enum Types.ListedStatus)"
                              }
                            },
                            "id": 7695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Open",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6539,
                            "src": "7327:17:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ListedStatus_$6541",
                              "typeString": "enum Types.ListedStatus"
                            }
                          },
                          "src": "7295:49:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7711,
                        "nodeType": "IfStatement",
                        "src": "7292:145:44",
                        "trueBody": {
                          "id": 7710,
                          "nodeType": "Block",
                          "src": "7345:92:44",
                          "statements": [
                            {
                              "expression": {
                                "id": 7705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 7697,
                                    "name": "listedItems",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7664,
                                    "src": "7360:11:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_LicenseItem_$6586_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Types.LicenseItem memory[] memory"
                                    }
                                  },
                                  "id": 7699,
                                  "indexExpression": {
                                    "id": 7698,
                                    "name": "count",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7673,
                                    "src": "7372:5:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7360:18:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LicenseItem_$6586_memory_ptr",
                                    "typeString": "struct Types.LicenseItem memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 7700,
                                    "name": "_idToLicenseItem",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6501,
                                    "src": "7381:16:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LicenseItem_$6586_storage_$",
                                      "typeString": "mapping(uint256 => struct Types.LicenseItem storage ref)"
                                    }
                                  },
                                  "id": 7704,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 7703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 7701,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7677,
                                      "src": "7398:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 7702,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7400:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "7398:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7381:21:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LicenseItem_$6586_storage",
                                    "typeString": "struct Types.LicenseItem storage ref"
                                  }
                                },
                                "src": "7360:42:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LicenseItem_$6586_memory_ptr",
                                  "typeString": "struct Types.LicenseItem memory"
                                }
                              },
                              "id": 7706,
                              "nodeType": "ExpressionStatement",
                              "src": "7360:42:44"
                            },
                            {
                              "expression": {
                                "id": 7708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "7417:7:44",
                                "subExpression": {
                                  "id": 7707,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7673,
                                  "src": "7417:5:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7709,
                              "nodeType": "ExpressionStatement",
                              "src": "7417:7:44"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7680,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7677,
                      "src": "7246:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 7681,
                          "name": "_licenseItemIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6481,
                          "src": "7250:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$5279_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 7682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5291,
                        "src": "7250:23:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5279_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5279_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 7683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7250:25:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7246:29:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7713,
                  "initializationExpression": {
                    "assignments": [
                      7677
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7677,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7239:1:44",
                        "nodeType": "VariableDeclaration",
                        "scope": 7713,
                        "src": "7234:6:44",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7676,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7234:4:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7679,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 7678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7243:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7234:10:44"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7277:3:44",
                      "subExpression": {
                        "id": 7685,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7677,
                        "src": "7277:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7687,
                    "nodeType": "ExpressionStatement",
                    "src": "7277:3:44"
                  },
                  "nodeType": "ForStatement",
                  "src": "7230:214:44"
                },
                {
                  "expression": {
                    "id": 7714,
                    "name": "listedItems",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7664,
                    "src": "7457:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LicenseItem_$6586_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Types.LicenseItem memory[] memory"
                    }
                  },
                  "functionReturnParameters": 7649,
                  "id": 7715,
                  "nodeType": "Return",
                  "src": "7450:18:44"
                }
              ]
            },
            "documentation": {
              "id": 7643,
              "nodeType": "StructuredDocumentation",
              "src": "6911:59:44",
              "text": "@notice fetches all tokenIds listed for sale"
            },
            "functionSelector": "c703a6cd",
            "id": 7717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchListedLicenses",
            "nameLocation": "6983:19:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7002:2:44"
            },
            "returnParameters": {
              "id": 7649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7717,
                  "src": "7028:21:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LicenseItem_$6586_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Types.LicenseItem[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7646,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 7645,
                        "name": "LicenseItem",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6586,
                        "src": "7028:11:44"
                      },
                      "referencedDeclaration": 6586,
                      "src": "7028:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LicenseItem_$6586_storage_ptr",
                        "typeString": "struct Types.LicenseItem"
                      }
                    },
                    "id": 7647,
                    "nodeType": "ArrayTypeName",
                    "src": "7028:14:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LicenseItem_$6586_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.LicenseItem[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7027:23:44"
            },
            "scope": 7960,
            "src": "6974:500:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7730,
              "nodeType": "Block",
              "src": "7676:47:44",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7726,
                      "name": "_idToLicenseItem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6501,
                      "src": "7690:16:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LicenseItem_$6586_storage_$",
                        "typeString": "mapping(uint256 => struct Types.LicenseItem storage ref)"
                      }
                    },
                    "id": 7728,
                    "indexExpression": {
                      "id": 7727,
                      "name": "licenseId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7720,
                      "src": "7707:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7690:27:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LicenseItem_$6586_storage",
                      "typeString": "struct Types.LicenseItem storage ref"
                    }
                  },
                  "functionReturnParameters": 7725,
                  "id": 7729,
                  "nodeType": "Return",
                  "src": "7683:34:44"
                }
              ]
            },
            "documentation": {
              "id": 7718,
              "nodeType": "StructuredDocumentation",
              "src": "7480:110:44",
              "text": "@notice fetches a license with a given licenseid\n@param licenseId id of the listed license"
            },
            "functionSelector": "c75a3da9",
            "id": 7731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchLicense",
            "nameLocation": "7603:12:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7720,
                  "mutability": "mutable",
                  "name": "licenseId",
                  "nameLocation": "7624:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7731,
                  "src": "7616:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7616:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7615:19:44"
            },
            "returnParameters": {
              "id": 7725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7724,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7731,
                  "src": "7656:18:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LicenseItem_$6586_memory_ptr",
                    "typeString": "struct Types.LicenseItem"
                  },
                  "typeName": {
                    "id": 7723,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7722,
                      "name": "LicenseItem",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6586,
                      "src": "7656:11:44"
                    },
                    "referencedDeclaration": 6586,
                    "src": "7656:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LicenseItem_$6586_storage_ptr",
                      "typeString": "struct Types.LicenseItem"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7655:20:44"
            },
            "scope": 7960,
            "src": "7594:129:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7808,
              "nodeType": "Block",
              "src": "7886:403:44",
              "statements": [
                {
                  "assignments": [
                    7740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7740,
                      "mutability": "mutable",
                      "name": "toFetch",
                      "nameLocation": "7901:7:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 7808,
                      "src": "7893:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7739,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7893:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7752,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 7741,
                            "name": "_saleIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6475,
                            "src": "7911:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$5279_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 7742,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5291,
                          "src": "7911:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5279_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5279_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 7743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7911:18:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 7744,
                            "name": "_closedSales",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6478,
                            "src": "7932:12:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$5279_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 7745,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5291,
                          "src": "7932:20:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5279_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5279_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 7746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7932:22:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7911:43:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 7748,
                          "name": "_futureSales",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6487,
                          "src": "7957:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$5279_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 7749,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5291,
                        "src": "7957:20:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5279_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5279_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 7750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7957:22:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7911:68:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7893:86:44"
                },
                {
                  "assignments": [
                    7757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7757,
                      "mutability": "mutable",
                      "name": "activeSales",
                      "nameLocation": "8005:11:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 7808,
                      "src": "7986:30:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_SaleItem_$6568_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Types.SaleItem[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7755,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 7754,
                            "name": "SaleItem",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6568,
                            "src": "7986:8:44"
                          },
                          "referencedDeclaration": 6568,
                          "src": "7986:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleItem_$6568_storage_ptr",
                            "typeString": "struct Types.SaleItem"
                          }
                        },
                        "id": 7756,
                        "nodeType": "ArrayTypeName",
                        "src": "7986:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SaleItem_$6568_storage_$dyn_storage_ptr",
                          "typeString": "struct Types.SaleItem[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7764,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7762,
                        "name": "toFetch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7740,
                        "src": "8034:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8019:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SaleItem_$6568_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Types.SaleItem memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7759,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 7758,
                            "name": "SaleItem",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6568,
                            "src": "8023:8:44"
                          },
                          "referencedDeclaration": 6568,
                          "src": "8023:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleItem_$6568_storage_ptr",
                            "typeString": "struct Types.SaleItem"
                          }
                        },
                        "id": 7760,
                        "nodeType": "ArrayTypeName",
                        "src": "8023:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SaleItem_$6568_storage_$dyn_storage_ptr",
                          "typeString": "struct Types.SaleItem[]"
                        }
                      }
                    },
                    "id": 7763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8019:23:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SaleItem_$6568_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Types.SaleItem memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7986:56:44"
                },
                {
                  "assignments": [
                    7766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7766,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "8054:5:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 7808,
                      "src": "8049:10:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7765,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8049:4:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7768,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 7767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8062:1:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8049:14:44"
                },
                {
                  "body": {
                    "id": 7804,
                    "nodeType": "Block",
                    "src": "8115:144:44",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 7788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 7781,
                                "name": "_idToSaleItem",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6496,
                                "src": "8129:13:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                                  "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                                }
                              },
                              "id": 7785,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7782,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7770,
                                  "src": "8143:1:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 7783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8145:1:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "8143:3:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8129:18:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                                "typeString": "struct Types.SaleItem storage ref"
                              }
                            },
                            "id": 7786,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6565,
                            "src": "8129:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 7787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8158:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8129:33:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7803,
                        "nodeType": "IfStatement",
                        "src": "8126:126:44",
                        "trueBody": {
                          "id": 7802,
                          "nodeType": "Block",
                          "src": "8163:89:44",
                          "statements": [
                            {
                              "expression": {
                                "id": 7797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 7789,
                                    "name": "activeSales",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7757,
                                    "src": "8178:11:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_SaleItem_$6568_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Types.SaleItem memory[] memory"
                                    }
                                  },
                                  "id": 7791,
                                  "indexExpression": {
                                    "id": 7790,
                                    "name": "count",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7766,
                                    "src": "8190:5:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8178:18:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SaleItem_$6568_memory_ptr",
                                    "typeString": "struct Types.SaleItem memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 7792,
                                    "name": "_idToSaleItem",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6496,
                                    "src": "8199:13:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                                      "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                                    }
                                  },
                                  "id": 7796,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 7795,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 7793,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7770,
                                      "src": "8213:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 7794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8215:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "8213:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8199:18:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                                    "typeString": "struct Types.SaleItem storage ref"
                                  }
                                },
                                "src": "8178:39:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SaleItem_$6568_memory_ptr",
                                  "typeString": "struct Types.SaleItem memory"
                                }
                              },
                              "id": 7798,
                              "nodeType": "ExpressionStatement",
                              "src": "8178:39:44"
                            },
                            {
                              "expression": {
                                "id": 7800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "8232:7:44",
                                "subExpression": {
                                  "id": 7799,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7766,
                                  "src": "8232:5:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7801,
                              "nodeType": "ExpressionStatement",
                              "src": "8232:7:44"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7773,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7770,
                      "src": "8087:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 7774,
                          "name": "_saleIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6475,
                          "src": "8091:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$5279_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 7775,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5291,
                        "src": "8091:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5279_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5279_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 7776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8091:18:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8087:22:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7805,
                  "initializationExpression": {
                    "assignments": [
                      7770
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7770,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8080:1:44",
                        "nodeType": "VariableDeclaration",
                        "scope": 7805,
                        "src": "8075:6:44",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7769,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8075:4:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7772,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 7771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8084:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8075:10:44"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8111:3:44",
                      "subExpression": {
                        "id": 7778,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7770,
                        "src": "8111:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7780,
                    "nodeType": "ExpressionStatement",
                    "src": "8111:3:44"
                  },
                  "nodeType": "ForStatement",
                  "src": "8071:188:44"
                },
                {
                  "expression": {
                    "id": 7806,
                    "name": "activeSales",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7757,
                    "src": "8272:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SaleItem_$6568_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Types.SaleItem memory[] memory"
                    }
                  },
                  "functionReturnParameters": 7738,
                  "id": 7807,
                  "nodeType": "Return",
                  "src": "8265:18:44"
                }
              ]
            },
            "documentation": {
              "id": 7732,
              "nodeType": "StructuredDocumentation",
              "src": "7729:82:44",
              "text": "@notice fetches all of the active nft license sales on the platform"
            },
            "functionSelector": "6e1c8181",
            "id": 7809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchActiveSales",
            "nameLocation": "7824:16:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7840:2:44"
            },
            "returnParameters": {
              "id": 7738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7737,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7809,
                  "src": "7866:18:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SaleItem_$6568_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Types.SaleItem[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7735,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 7734,
                        "name": "SaleItem",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6568,
                        "src": "7866:8:44"
                      },
                      "referencedDeclaration": 6568,
                      "src": "7866:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SaleItem_$6568_storage_ptr",
                        "typeString": "struct Types.SaleItem"
                      }
                    },
                    "id": 7736,
                    "nodeType": "ArrayTypeName",
                    "src": "7866:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SaleItem_$6568_storage_$dyn_storage_ptr",
                      "typeString": "struct Types.SaleItem[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7865:20:44"
            },
            "scope": 7960,
            "src": "7815:474:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7822,
              "nodeType": "Block",
              "src": "8461:43:44",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7818,
                      "name": "_idToSaleItem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6496,
                      "src": "8477:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleItem_$6568_storage_$",
                        "typeString": "mapping(uint256 => struct Types.SaleItem storage ref)"
                      }
                    },
                    "id": 7820,
                    "indexExpression": {
                      "id": 7819,
                      "name": "saleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7812,
                      "src": "8491:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8477:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SaleItem_$6568_storage",
                      "typeString": "struct Types.SaleItem storage ref"
                    }
                  },
                  "functionReturnParameters": 7817,
                  "id": 7821,
                  "nodeType": "Return",
                  "src": "8470:28:44"
                }
              ]
            },
            "documentation": {
              "id": 7810,
              "nodeType": "StructuredDocumentation",
              "src": "8295:89:44",
              "text": "@notice retrieves a sale\n@param saleId id of the sale to be retrieved"
            },
            "functionSelector": "c5401d6f",
            "id": 7823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchSale",
            "nameLocation": "8397:9:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7812,
                  "mutability": "mutable",
                  "name": "saleId",
                  "nameLocation": "8415:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7823,
                  "src": "8407:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8407:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8406:16:44"
            },
            "returnParameters": {
              "id": 7817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7823,
                  "src": "8444:15:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SaleItem_$6568_memory_ptr",
                    "typeString": "struct Types.SaleItem"
                  },
                  "typeName": {
                    "id": 7815,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7814,
                      "name": "SaleItem",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6568,
                      "src": "8444:8:44"
                    },
                    "referencedDeclaration": 6568,
                    "src": "8444:8:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SaleItem_$6568_storage_ptr",
                      "typeString": "struct Types.SaleItem"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8443:17:44"
            },
            "scope": 7960,
            "src": "8388:116:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 7824,
              "nodeType": "StructuredDocumentation",
              "src": "8510:157:44",
              "text": "@notice transfers license item to send on tokenTransfer\n@param licenseId id of the license to sell\n@param amount amount to purchase "
            },
            "functionSelector": "10e52a3a",
            "id": 7831,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseLicense",
            "nameLocation": "8680:15:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7826,
                  "mutability": "mutable",
                  "name": "licenseId",
                  "nameLocation": "8704:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7831,
                  "src": "8696:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8696:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7828,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8723:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7831,
                  "src": "8715:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8715:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8695:35:44"
            },
            "returnParameters": {
              "id": 7830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8755:0:44"
            },
            "scope": 7960,
            "src": "8671:85:44",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7847,
              "nodeType": "Block",
              "src": "8955:58:44",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7839,
                        "name": "start",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7834,
                        "src": "8969:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "id": 7840,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8977:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8977:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8969:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "74727565",
                      "id": 7844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9003:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "id": 7845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8969:38:44",
                    "trueExpression": {
                      "hexValue": "66616c7365",
                      "id": 7843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8995:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7838,
                  "id": 7846,
                  "nodeType": "Return",
                  "src": "8962:45:44"
                }
              ]
            },
            "documentation": {
              "id": 7832,
              "nodeType": "StructuredDocumentation",
              "src": "8764:125:44",
              "text": "@notice checks if license is active based on start and block.timestamp\n@param start start time of license"
            },
            "id": 7848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActive",
            "nameLocation": "8902:8:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7834,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "8919:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7848,
                  "src": "8911:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8911:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8910:15:44"
            },
            "returnParameters": {
              "id": 7838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7837,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7848,
                  "src": "8949:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7836,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8949:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8948:6:44"
            },
            "scope": 7960,
            "src": "8893:120:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7864,
              "nodeType": "Block",
              "src": "9217:58:44",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7856,
                        "name": "start",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7851,
                        "src": "9231:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "id": 7857,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "9239:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "9239:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9231:23:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "66616c7365",
                      "id": 7861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9264:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "id": 7862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9231:38:44",
                    "trueExpression": {
                      "hexValue": "74727565",
                      "id": 7860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9257:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7855,
                  "id": 7863,
                  "nodeType": "Return",
                  "src": "9224:45:44"
                }
              ]
            },
            "documentation": {
              "id": 7849,
              "nodeType": "StructuredDocumentation",
              "src": "9019:132:44",
              "text": "@notice checks if license is in the future based on start and block.timestamp\n@param start start time of license"
            },
            "id": 7865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isFuture",
            "nameLocation": "9164:8:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7851,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "9181:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7865,
                  "src": "9173:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9173:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9172:15:44"
            },
            "returnParameters": {
              "id": 7855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7865,
                  "src": "9211:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9211:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9210:6:44"
            },
            "scope": 7960,
            "src": "9155:120:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2044
            ],
            "body": {
              "id": 7876,
              "nodeType": "Block",
              "src": "9387:2:44",
              "statements": []
            },
            "id": 7877,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 7871,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8237,
                    "src": "9364:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7872,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7870,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "9355:8:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "9355:20:44"
              },
              {
                "id": 7874,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7873,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 627,
                  "src": "9376:10:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "9376:10:44"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "9292:17:44",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7869,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9346:8:44"
            },
            "parameters": {
              "id": 7868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7867,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "9318:17:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7877,
                  "src": "9310:25:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9310:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9309:27:44"
            },
            "returnParameters": {
              "id": 7875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9387:0:44"
            },
            "scope": 7960,
            "src": "9283:106:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7958,
              "nodeType": "Block",
              "src": "9665:523:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7898,
                      "name": "__AccessControl_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "9674:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9674:22:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7900,
                  "nodeType": "ExpressionStatement",
                  "src": "9674:22:44"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7901,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "9705:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9705:17:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7903,
                  "nodeType": "ExpressionStatement",
                  "src": "9705:17:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7905,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8237,
                        "src": "9742:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7906,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7879,
                        "src": "9754:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7904,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "9731:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9731:29:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7908,
                  "nodeType": "ExpressionStatement",
                  "src": "9731:29:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7910,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8237,
                        "src": "9783:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7911,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8237,
                        "src": "9795:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7909,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "9769:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 7912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9769:37:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7913,
                  "nodeType": "ExpressionStatement",
                  "src": "9769:37:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7915,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8227,
                        "src": "9826:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7916,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7879,
                        "src": "9839:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7914,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "9815:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9815:30:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7918,
                  "nodeType": "ExpressionStatement",
                  "src": "9815:30:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7920,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8227,
                        "src": "9868:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7921,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8237,
                        "src": "9881:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7919,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "9854:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 7922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9854:38:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7923,
                  "nodeType": "ExpressionStatement",
                  "src": "9854:38:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7925,
                        "name": "VERIFIER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8247,
                        "src": "9912:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7926,
                        "name": "verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7881,
                        "src": "9927:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7924,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "9901:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9901:35:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7928,
                  "nodeType": "ExpressionStatement",
                  "src": "9901:35:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7930,
                        "name": "VERIFIER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8247,
                        "src": "9959:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7931,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8237,
                        "src": "9974:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7929,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "9945:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 7932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9945:40:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7933,
                  "nodeType": "ExpressionStatement",
                  "src": "9945:40:44"
                },
                {
                  "expression": {
                    "id": 7936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7934,
                      "name": "LISTING_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6462,
                      "src": "9994:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7935,
                      "name": "listingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7883,
                      "src": "10008:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9994:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7937,
                  "nodeType": "ExpressionStatement",
                  "src": "9994:24:44"
                },
                {
                  "expression": {
                    "id": 7940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7938,
                      "name": "COMMISSION_BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6464,
                      "src": "10027:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7939,
                      "name": "commissionBp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7893,
                      "src": "10043:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "10027:28:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 7941,
                  "nodeType": "ExpressionStatement",
                  "src": "10027:28:44"
                },
                {
                  "expression": {
                    "id": 7944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7942,
                      "name": "_hiloToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6466,
                      "src": "10064:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7943,
                      "name": "hilo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7885,
                      "src": "10077:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10064:17:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7945,
                  "nodeType": "ExpressionStatement",
                  "src": "10064:17:44"
                },
                {
                  "expression": {
                    "id": 7948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7946,
                      "name": "_escrowSales",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "10090:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7947,
                      "name": "escrowSales",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7889,
                      "src": "10105:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10090:26:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7949,
                  "nodeType": "ExpressionStatement",
                  "src": "10090:26:44"
                },
                {
                  "expression": {
                    "id": 7952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7950,
                      "name": "_escrowListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6470,
                      "src": "10125:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7951,
                      "name": "escrowListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7891,
                      "src": "10141:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10125:28:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7953,
                  "nodeType": "ExpressionStatement",
                  "src": "10125:28:44"
                },
                {
                  "expression": {
                    "id": 7956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7954,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6472,
                      "src": "10162:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7955,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7887,
                      "src": "10174:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10162:20:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7957,
                  "nodeType": "ExpressionStatement",
                  "src": "10162:20:44"
                }
              ]
            },
            "functionSelector": "7e382257",
            "id": 7959,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7896,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7895,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 456,
                  "src": "9653:11:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "9653:11:44"
              }
            ],
            "name": "__HeirloomMarketplace_init",
            "nameLocation": "9404:26:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7879,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "9448:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "9440:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9440:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7881,
                  "mutability": "mutable",
                  "name": "verifier",
                  "nameLocation": "9470:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "9462:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9462:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7883,
                  "mutability": "mutable",
                  "name": "listingFee",
                  "nameLocation": "9495:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "9487:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9487:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7885,
                  "mutability": "mutable",
                  "name": "hilo",
                  "nameLocation": "9522:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "9514:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9514:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7887,
                  "mutability": "mutable",
                  "name": "treasury",
                  "nameLocation": "9544:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "9536:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9536:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7889,
                  "mutability": "mutable",
                  "name": "escrowSales",
                  "nameLocation": "9570:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "9562:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9562:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7891,
                  "mutability": "mutable",
                  "name": "escrowListed",
                  "nameLocation": "9598:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "9590:20:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9590:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7893,
                  "mutability": "mutable",
                  "name": "commissionBp",
                  "nameLocation": "9626:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "9619:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 7892,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9619:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9431:214:44"
            },
            "returnParameters": {
              "id": 7897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9665:0:44"
            },
            "scope": 7960,
            "src": "9395:793:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7961,
        "src": "632:9559:44",
        "usedErrors": []
      }
    ],
    "src": "33:10160:44"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-07T10:45:15.724Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "activateFutureSale(uint256)": {
        "params": {
          "saleId": "id of the sale to be activated"
        }
      },
      "closeSaleOnDeadline(uint256)": {
        "params": {
          "saleId": "id of the sale to be closed"
        }
      },
      "createSale(address,uint256,address,address,uint256,uint256,uint256,uint96)": {
        "params": {
          "end": "enddate of sale",
          "maxSupply": "token cap of license",
          "nftContract": "nft contract for minting license nft",
          "price": "of the item in the sale",
          "rbp": "royalty basis points, percentage of royalty to be collected by license creator",
          "refferer": "address of the refferer",
          "start": "startDate of the sale"
        }
      },
      "fetchLicense(uint256)": {
        "params": {
          "licenseId": "id of the listed license"
        }
      },
      "fetchSale(uint256)": {
        "params": {
          "saleId": "id of the sale to be retrieved"
        }
      },
      "forceCloseSale(uint256)": {
        "params": {
          "saleId": "id of the sale to be forced closed"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isUserVerified(address)": {
        "params": {
          "user": "checks wheter a user is verified"
        }
      },
      "listLicense(address,uint256,uint256,uint256)": {
        "params": {
          "amount": "the amount of nfts to be put up for sale",
          "nftContract": "nft contract address of the license nft",
          "price": "to sell license for",
          "tokenId": "the tokenId of the Saas License nft"
        }
      },
      "participate(uint256,uint256)": {
        "details": "erc20 transfer needs to be pre-approved",
        "params": {
          "amount": "number of licenses to buy",
          "saleId": "id of the ongoing sale"
        }
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "proxiableUUID()": {
        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
      },
      "purchaseLicense(uint256,uint256)": {
        "params": {
          "amount": "amount to purchase ",
          "licenseId": "id of the license to sell"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setCommissionRBP(uint96)": {
        "params": {
          "newBP": "new commission basis points"
        }
      },
      "setListingFee(uint256)": {
        "params": {
          "newListingFee": "new listing fee"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "updateEscrowListed(address)": {
        "params": {
          "newEscrow": "address to which escrow is updated"
        }
      },
      "updateEscrowSales(address)": {
        "params": {
          "newEscrow": "address to which escrow is updated"
        }
      },
      "updateTreasury(address)": {
        "params": {
          "newTreasury": "address to which treasury is updated"
        }
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "verifyUser(address)": {
        "params": {
          "user": "verifies a user on request of verifier"
        }
      }
    },
    "title": "base contract for heirloomdao marketplace implementation",
    "version": 1
  },
  "userdoc": {
    "events": {
      "BoughtFromSale(uint256,uint256,address,uint256)": {
        "notice": "emitted after a license is bought from a sale"
      },
      "CommissionUpdated(uint96)": {
        "notice": "emitted after the commission basis points is updated "
      },
      "EscrowUpdated(address)": {
        "notice": "emitted after the treasury is updated "
      },
      "LicenseListed(uint256,uint256,address,uint256,uint256)": {
        "notice": "emitted after a license is listed by a user"
      },
      "LicenseSold(uint256,uint256,address,address,uint256,uint256)": {
        "notice": "emitted after a license is listed by a user"
      },
      "ListedLicenseClosed(uint256,uint256,address,uint8)": {
        "notice": "emitted after a listed license is closed"
      },
      "ListingFeeUpdated(uint256)": {
        "notice": "emitted after the listing fee is updated "
      },
      "SaleActivated(uint256)": {
        "notice": "emitted after a (future) sale is activated"
      },
      "SaleClosed(uint256)": {
        "notice": "emitted after a close sale"
      },
      "SaleCreated(address,uint256,uint256)": {
        "notice": "emitted after every sale created"
      },
      "TokenUpdated(address)": {
        "notice": "emitted after the treasury is updated "
      },
      "TreasuryUpdated(address)": {
        "notice": "emitted after the treasury is updated "
      },
      "UserVerified(address)": {
        "notice": "emitted after the treasury is updated "
      }
    },
    "kind": "user",
    "methods": {
      "activateFutureSale(uint256)": {
        "notice": "activates a sale that starts of which its start date is < block timestamp"
      },
      "closeSaleOnDeadline(uint256)": {
        "notice": "closes a sale id only if deadline is passed "
      },
      "createSale(address,uint256,address,address,uint256,uint256,uint256,uint96)": {
        "notice": "creates a saleItem"
      },
      "fetchActiveSales()": {
        "notice": "fetches all of the active nft license sales on the platform"
      },
      "fetchLicense(uint256)": {
        "notice": "fetches a license with a given licenseid"
      },
      "fetchListedLicenses()": {
        "notice": "fetches all tokenIds listed for sale"
      },
      "fetchSale(uint256)": {
        "notice": "retrieves a sale"
      },
      "forceCloseSale(uint256)": {
        "notice": "allows creator of a sale to foricibly end a sale"
      },
      "isUserVerified(address)": {
        "notice": "verifies a user"
      },
      "listLicense(address,uint256,uint256,uint256)": {
        "notice": "gives the heirloom operator permission to sell an token amount on behalf of the user"
      },
      "participate(uint256,uint256)": {
        "notice": "allows a user to participate in a license sale"
      },
      "purchaseLicense(uint256,uint256)": {
        "notice": "transfers license item to send on tokenTransfer"
      },
      "setCommissionRBP(uint96)": {
        "notice": "sets new commission rbp"
      },
      "setListingFee(uint256)": {
        "notice": "sets the listing fee"
      },
      "updateEscrowListed(address)": {
        "notice": "sets a new escrow address"
      },
      "updateEscrowSales(address)": {
        "notice": "sets a new escrow address"
      },
      "updateTreasury(address)": {
        "notice": "sets a new treasury address"
      },
      "verifyUser(address)": {
        "notice": "verifies a user"
      }
    },
    "version": 1
  }
}